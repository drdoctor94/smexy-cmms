{"ast":null,"code":"var _jsxFileName = \"/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, MenuItem, Select, InputLabel, FormControl, Grid, Tabs, Tab, Box, Typography, IconButton, Snackbar } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close'; // Import CloseIcon for \"X\" button\nimport axios from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst statuses = ['new', 'pending', 'delayed', 'closed', 'excluded', 're-opened'];\nconst taskTypes = ['Clean Up / Spill', 'Cooling Issue', 'Electrical Issue', 'Equipment Repairs', 'Fire Safety', 'General Maintenance Request', 'Health and Safety', 'Heating Issues', 'Lighting Issues', 'Mechanical Issues', 'Painting / Touch Ups', 'Pest Control', 'Plumbing Issues', 'Waste Issues'];\nconst EditWorkOrderModal = ({\n  open,\n  handleClose,\n  workOrder,\n  fetchWorkOrders\n}) => {\n  _s();\n  var _formData$submittedBy;\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [],\n    // Initialize notesHistory\n    newNote: ''\n  });\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // Snackbar visibility\n  const [originalFormData, setOriginalFormData] = useState(null); // Store original form data before changes\n\n  useEffect(() => {\n    if (workOrder) {\n      // Prepopulate the form with existing work order data, including notes history\n      setFormData({\n        status: workOrder.status || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notes: workOrder.notes || '',\n        submittedBy: workOrder.submittedBy || '',\n        notesHistory: workOrder.notesHistory || [],\n        // Make sure notesHistory is included\n        newNote: ''\n      });\n\n      // Store original form data to enable undo functionality\n      setOriginalFormData({\n        status: workOrder.status || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notes: workOrder.notes || '',\n        submittedBy: workOrder.submittedBy || '',\n        notesHistory: workOrder.notesHistory || []\n      });\n    }\n  }, [workOrder]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Separate API call to add a note using /add-note endpoint, but it will not close the modal\n  const handleAddNote = async () => {\n    if (formData.newNote.trim() === '') {\n      return; // Prevent adding empty notes\n    }\n    try {\n      const newNote = {\n        note: formData.newNote\n      };\n\n      // Send the new note to the backend using the dedicated route\n      const response = await axios.put(`/api/work-orders/${workOrder._id}/add-note`, newNote);\n\n      // Update the local notes history with the new note from the backend response\n      setFormData({\n        ...formData,\n        notesHistory: response.data.notesHistory,\n        newNote: ''\n      });\n    } catch (error) {\n      console.error('Error adding note:', error);\n      alert('Failed to add the note. Please try again.');\n    }\n  };\n\n  // Delete a note from the notes history, but it will not close the modal\n  const handleDeleteNote = async index => {\n    const updatedNotesHistory = formData.notesHistory.filter((_, i) => i !== index);\n    try {\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        notesHistory: updatedNotesHistory\n      });\n      setFormData({\n        ...formData,\n        notesHistory: updatedNotesHistory\n      });\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      alert('Failed to delete the note. Please try again.');\n    }\n  };\n\n  // Save the work order when pressing \"Save\" button and close the modal\n  const handleSubmit = async () => {\n    try {\n      // Save the work order with updated information\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        status: formData.status,\n        taskType: formData.taskType,\n        roomNumber: formData.roomNumber,\n        details: formData.description,\n        // Ensure 'details' is updated, not 'description'\n        priority: formData.priority,\n        // Add priority if necessary\n        notesHistory: formData.notesHistory\n      });\n\n      // Open the Snackbar to show success and provide an Undo option\n      setSnackbarOpen(true);\n      fetchWorkOrders();\n      handleClose(); // Close the modal after saving\n    } catch (error) {\n      console.error('Error updating work order:', error);\n      alert('Failed to update the work order. Please try again.');\n    }\n  };\n\n  // Handle closing of the Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return; // Ignore clicks outside the snackbar\n    }\n    setSnackbarOpen(false); // Allow manual close\n  };\n\n  // Handle Undo action\n  const handleUndo = async () => {\n    try {\n      // Restore original form data by calling the backend with the original data\n      await axios.put(`/api/work-orders/${workOrder._id}`, originalFormData);\n\n      // Re-fetch work orders to update the UI\n      fetchWorkOrders();\n\n      // Close the Snackbar\n      handleCloseSnackbar();\n    } catch (error) {\n      console.error('Error undoing changes:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Work Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Update the work order details below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: selectedTab,\n          onChange: handleTabChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Work Order Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Notes and Updates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), selectedTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleChange,\n                  fullWidth: true,\n                  children: statuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: status,\n                    children: status\n                  }, status, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Task Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"taskType\",\n                  value: formData.taskType,\n                  onChange: handleChange,\n                  fullWidth: true,\n                  children: taskTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type,\n                    children: type\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Room Number\",\n                name: \"roomNumber\",\n                value: formData.roomNumber,\n                onChange: handleChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Submitted By\",\n                name: \"submittedBy\",\n                value: ((_formData$submittedBy = formData.submittedBy) === null || _formData$submittedBy === void 0 ? void 0 : _formData$submittedBy.username) || 'N/A',\n                disabled: true,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Original Description\",\n                name: \"description\",\n                value: formData.description,\n                fullWidth: true,\n                multiline: true,\n                rows: 6,\n                margin: \"normal\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), selectedTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Add new note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Add new note\",\n            name: \"newNote\",\n            value: formData.newNote,\n            onChange: handleChange,\n            fullWidth: true,\n            multiline: true,\n            rows: 3,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              mt: 4\n            },\n            children: \"Notes History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: formData.notesHistory.map((note, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                borderBottom: '1px solid #ccc',\n                pb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: note.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this), \" at\", ' ', new Date(note.timestamp).toLocaleString(), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: note.note\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleDeleteNote(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 7500,\n      onClose: handleCloseSnackbar // Close only manually or after 7.5 seconds\n      ,\n      message: \"Work order updated\",\n      action: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleUndo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleCloseSnackbar,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EditWorkOrderModal, \"mFpTWQ4WZ9O3fur0Nh2/jPBGcIY=\");\n_c = EditWorkOrderModal;\nexport default EditWorkOrderModal;\nvar _c;\n$RefreshReg$(_c, \"EditWorkOrderModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","Select","InputLabel","FormControl","Grid","Tabs","Tab","Box","Typography","IconButton","Snackbar","DeleteIcon","CloseIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","statuses","taskTypes","EditWorkOrderModal","open","handleClose","workOrder","fetchWorkOrders","_s","_formData$submittedBy","formData","setFormData","status","taskType","roomNumber","description","notes","submittedBy","notesHistory","newNote","selectedTab","setSelectedTab","snackbarOpen","setSnackbarOpen","originalFormData","setOriginalFormData","details","handleChange","e","target","name","value","handleTabChange","event","newValue","handleAddNote","trim","note","response","put","_id","data","error","console","alert","handleDeleteNote","index","updatedNotesHistory","filter","_","i","handleSubmit","priority","handleCloseSnackbar","reason","handleUndo","children","onClose","fullWidth","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","container","spacing","item","xs","margin","map","type","username","disabled","multiline","rows","variant","gutterBottom","color","onClick","sx","mt","mb","borderBottom","pb","Date","timestamp","toLocaleString","whiteSpace","size","fontSize","autoHideDuration","message","action","_c","$RefreshReg$"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  Grid,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  IconButton,\n  Snackbar\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';  // Import CloseIcon for \"X\" button\nimport axios from '../api/axiosConfig';\n\nconst statuses = ['new', 'pending', 'delayed', 'closed', 'excluded', 're-opened'];\nconst taskTypes = [\n  'Clean Up / Spill',\n  'Cooling Issue',\n  'Electrical Issue',\n  'Equipment Repairs',\n  'Fire Safety',\n  'General Maintenance Request',\n  'Health and Safety',\n  'Heating Issues',\n  'Lighting Issues',\n  'Mechanical Issues',\n  'Painting / Touch Ups',\n  'Pest Control',\n  'Plumbing Issues',\n  'Waste Issues',\n];\n\nconst EditWorkOrderModal = ({ open, handleClose, workOrder, fetchWorkOrders }) => {\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [], // Initialize notesHistory\n    newNote: '',\n  });\n  \n  const [selectedTab, setSelectedTab] = useState(0);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);  // Snackbar visibility\n  const [originalFormData, setOriginalFormData] = useState(null);  // Store original form data before changes\n\n  useEffect(() => {\n    if (workOrder) {\n      // Prepopulate the form with existing work order data, including notes history\n      setFormData({\n        status: workOrder.status || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notes: workOrder.notes || '',\n        submittedBy: workOrder.submittedBy || '',\n        notesHistory: workOrder.notesHistory || [], // Make sure notesHistory is included\n        newNote: '',\n      });\n\n      // Store original form data to enable undo functionality\n      setOriginalFormData({\n        status: workOrder.status || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notes: workOrder.notes || '',\n        submittedBy: workOrder.submittedBy || '',\n        notesHistory: workOrder.notesHistory || [],\n      });\n    }\n  }, [workOrder]);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Separate API call to add a note using /add-note endpoint, but it will not close the modal\n  const handleAddNote = async () => {\n    if (formData.newNote.trim() === '') {\n      return; // Prevent adding empty notes\n    }\n\n    try {\n      const newNote = {\n        note: formData.newNote,\n      };\n\n      // Send the new note to the backend using the dedicated route\n      const response = await axios.put(`/api/work-orders/${workOrder._id}/add-note`, newNote);\n\n      // Update the local notes history with the new note from the backend response\n      setFormData({\n        ...formData,\n        notesHistory: response.data.notesHistory,\n        newNote: '',\n      });\n\n    } catch (error) {\n      console.error('Error adding note:', error);\n      alert('Failed to add the note. Please try again.');\n    }\n  };\n\n  // Delete a note from the notes history, but it will not close the modal\n  const handleDeleteNote = async (index) => {\n    const updatedNotesHistory = formData.notesHistory.filter((_, i) => i !== index);\n\n    try {\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        notesHistory: updatedNotesHistory\n      });\n\n      setFormData({\n        ...formData,\n        notesHistory: updatedNotesHistory,\n      });\n\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      alert('Failed to delete the note. Please try again.');\n    }\n  };\n\n  // Save the work order when pressing \"Save\" button and close the modal\n  const handleSubmit = async () => {\n    try {\n      // Save the work order with updated information\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        status: formData.status,\n        taskType: formData.taskType,\n        roomNumber: formData.roomNumber,\n        details: formData.description,  // Ensure 'details' is updated, not 'description'\n        priority: formData.priority,    // Add priority if necessary\n        notesHistory: formData.notesHistory,\n      });\n\n      // Open the Snackbar to show success and provide an Undo option\n      setSnackbarOpen(true);\n      fetchWorkOrders();\n      handleClose();  // Close the modal after saving\n\n    } catch (error) {\n      console.error('Error updating work order:', error);\n      alert('Failed to update the work order. Please try again.');\n    }\n  };\n\n  // Handle closing of the Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return; // Ignore clicks outside the snackbar\n    }\n    setSnackbarOpen(false); // Allow manual close\n  };\n\n  // Handle Undo action\n  const handleUndo = async () => {\n    try {\n      // Restore original form data by calling the backend with the original data\n      await axios.put(`/api/work-orders/${workOrder._id}`, originalFormData);\n      \n      // Re-fetch work orders to update the UI\n      fetchWorkOrders();\n      \n      // Close the Snackbar\n      handleCloseSnackbar();\n\n    } catch (error) {\n      console.error('Error undoing changes:', error);\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"md\">\n        <DialogTitle>Edit Work Order</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Update the work order details below:</DialogContentText>\n\n          {/* Tabs for switching between Details and Notes */}\n          <Tabs value={selectedTab} onChange={handleTabChange}>\n            <Tab label=\"Work Order Details\" />\n            <Tab label=\"Notes and Updates\" />\n          </Tabs>\n\n          {selectedTab === 0 && (\n            <Box>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <FormControl fullWidth margin=\"normal\">\n                    <InputLabel>Status</InputLabel>\n                    <Select\n                      name=\"status\"\n                      value={formData.status}\n                      onChange={handleChange}\n                      fullWidth\n                    >\n                      {statuses.map((status) => (\n                        <MenuItem key={status} value={status}>\n                          {status}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl fullWidth margin=\"normal\">\n                    <InputLabel>Task Type</InputLabel>\n                    <Select\n                      name=\"taskType\"\n                      value={formData.taskType}\n                      onChange={handleChange}\n                      fullWidth\n                    >\n                      {taskTypes.map((type) => (\n                        <MenuItem key={type} value={type}>\n                          {type}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <TextField\n                    label=\"Room Number\"\n                    name=\"roomNumber\"\n                    value={formData.roomNumber}\n                    onChange={handleChange}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    label=\"Submitted By\"\n                    name=\"submittedBy\"\n                    value={formData.submittedBy?.username || 'N/A'}\n                    disabled\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"Original Description\"\n                    name=\"description\"\n                    value={formData.description}\n                    fullWidth\n                    multiline\n                    rows={6}\n                    margin=\"normal\"\n                    disabled\n                  />\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n\n          {selectedTab === 1 && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Add new note\n              </Typography>\n              <TextField\n                label=\"Add new note\"\n                name=\"newNote\"\n                value={formData.newNote}\n                onChange={handleChange}\n                fullWidth\n                multiline\n                rows={3}\n                margin=\"normal\"\n              />\n              <Button variant=\"contained\" color=\"primary\" onClick={handleAddNote}>\n                Add Note\n              </Button>\n\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n                Notes History\n              </Typography>\n              <Box sx={{ mt: 2 }}>\n                {formData.notesHistory.map((note, index) => (\n                  <Box key={index} sx={{ mb: 2, borderBottom: '1px solid #ccc', pb: 1 }}>\n                    <Typography variant=\"body2\">\n                      <strong>{note.username}</strong> at{' '}\n                      {new Date(note.timestamp).toLocaleString()}:\n                    </Typography>\n                    <Typography\n                      variant=\"body1\"\n                      sx={{ whiteSpace: 'pre-wrap' }}\n                    >\n                      {note.note}\n                    </Typography>\n                    <IconButton size=\"small\" onClick={() => handleDeleteNote(index)}>\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar for showing success message with Undo option and an \"X\" to close */}\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={7500}\n        onClose={handleCloseSnackbar}  // Close only manually or after 7.5 seconds\n        message=\"Work order updated\"\n        action={\n          <>\n            <Button color=\"inherit\" size=\"small\" onClick={handleUndo}>\n              Undo\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleCloseSnackbar}\n            >\n              <CloseIcon />\n            </IconButton>\n          </>\n        }\n      />\n    </>\n  );\n};\n\nexport default EditWorkOrderModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}