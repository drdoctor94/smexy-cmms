{"ast":null,"code":"var _jsxFileName = \"/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditUserModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, FormControl, InputLabel, Select } from '@mui/material';\nimport axios from '../api/axiosConfig'; // Update this path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roles = ['Admin', 'Technician', 'Tenant'];\nconst EditUserModal = ({\n  open,\n  handleClose,\n  user,\n  fetchUsers\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    role: '',\n    firstName: '',\n    lastName: ''\n  });\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        username: user.username || '',\n        role: user.role || '',\n        firstName: user.firstName || '',\n        lastName: user.lastName || ''\n      });\n    }\n  }, [user]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async () => {\n    if (!user._id) {\n      return; // Exit if no user ID is provided\n    }\n    try {\n      await axios.put(`/api/users/${user._id}`, formData); // Send updated data to backend\n\n      fetchUsers(); // Refetch the users to reflect changes\n      handleClose(); // Close modal after submission\n    } catch (error) {\n      alert('Failed to update user. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"First Name\",\n        name: \"firstName\",\n        value: formData.firstName,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Last Name\",\n        name: \"lastName\",\n        value: formData.lastName,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"role\",\n          value: formData.role,\n          onChange: handleChange,\n          fullWidth: true,\n          children: roles.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: role,\n            children: role\n          }, role, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUserModal, \"/pVMA4hYTeFIwq7n4miiE/ixC/E=\");\n_c = EditUserModal;\nexport default EditUserModal;\nvar _c;\n$RefreshReg$(_c, \"EditUserModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","FormControl","InputLabel","Select","axios","jsxDEV","_jsxDEV","roles","EditUserModal","open","handleClose","user","fetchUsers","_s","formData","setFormData","username","role","firstName","lastName","handleChange","e","target","name","value","handleSubmit","_id","put","error","alert","onClose","fullWidth","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","margin","map","onClick","color","_c","$RefreshReg$"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditUserModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n} from '@mui/material';\nimport axios from '../api/axiosConfig';  // Update this path as necessary\n\nconst roles = ['Admin', 'Technician', 'Tenant'];\n\nconst EditUserModal = ({ open, handleClose, user, fetchUsers }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    role: '',\n    firstName: '',\n    lastName: '',\n  });\n\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        username: user.username || '',\n        role: user.role || '',\n        firstName: user.firstName || '',\n        lastName: user.lastName || '',\n      });\n    }\n  }, [user]);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async () => {\n    if (!user._id) {\n      return; // Exit if no user ID is provided\n    }\n\n    try {\n      await axios.put(`/api/users/${user._id}`, formData); // Send updated data to backend\n\n      fetchUsers(); // Refetch the users to reflect changes\n      handleClose(); // Close modal after submission\n    } catch (error) {\n      alert('Failed to update user. Please try again.');\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Edit User Information</DialogTitle>\n      <DialogContent>\n        {/* First Name */}\n        <TextField\n          label=\"First Name\"\n          name=\"firstName\"\n          value={formData.firstName}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n        />\n        {/* Last Name */}\n        <TextField\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={formData.lastName}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n        />\n        {/* Username */}\n        <TextField\n          label=\"Username\"\n          name=\"username\"\n          value={formData.username}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n        />\n        {/* Role */}\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Role</InputLabel>\n          <Select\n            name=\"role\"\n            value={formData.role}\n            onChange={handleChange}\n            fullWidth\n          >\n            {roles.map((role) => (\n              <MenuItem key={role} value={role}>\n                {role}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={handleSubmit} color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditUserModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}