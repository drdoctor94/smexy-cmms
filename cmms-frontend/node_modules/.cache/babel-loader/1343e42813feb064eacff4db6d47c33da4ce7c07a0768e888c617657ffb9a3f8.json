{"ast":null,"code":"var _jsxFileName = \"/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, MenuItem, Select, InputLabel, FormControl, Grid, Tabs, Tab, Box, Typography, IconButton, Snackbar } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axios from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst statusMapping = {\n  new: 'New',\n  pending: 'Pending',\n  delayed: 'Delayed',\n  closed: 'Closed',\n  excluded: 'Excluded',\n  're-opened': 'Re-Opened'\n};\nconst taskTypes = ['Clean Up / Spill', 'Cooling Issue', 'Electrical Issue', 'Equipment Repairs', 'Fire Safety', 'General Maintenance Request', 'Health and Safety', 'Heating Issues', 'Lighting Issues', 'Mechanical Issues', 'Painting / Touch Ups', 'Pest Control', 'Plumbing Issues', 'Waste Issues'];\nconst EditWorkOrderModal = ({\n  open,\n  handleClose,\n  workOrder,\n  fetchWorkOrders\n}) => {\n  _s();\n  var _formData$submittedBy;\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [],\n    newNote: '',\n    createdDate: '' // Add createdDate to formData\n  });\n  const [originalFormData, setOriginalFormData] = useState(null); // Store original form data for undo\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [undoing, setUndoing] = useState(false); // To track if undo action is in progress\n\n  useEffect(() => {\n    if (workOrder) {\n      const initialData = {\n        _id: workOrder._id || '',\n        // Ensure _id is included\n        status: workOrder.status || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notesHistory: workOrder.notesHistory || [],\n        createdDate: new Date(workOrder.createdDate).toLocaleString(),\n        // Add createdDate and format it\n        newNote: ''\n      };\n      setFormData(initialData);\n      setOriginalFormData(initialData); // Store the original form data with the ID\n    }\n  }, [workOrder]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Add a new note using /add-note endpoint\n  const handleAddNote = async () => {\n    if (formData.newNote.trim() === '') {\n      return; // Prevent adding empty notes\n    }\n    try {\n      const newNote = {\n        note: formData.newNote\n      };\n      const response = await axios.put(`/api/work-orders/${workOrder._id}/add-note`, newNote);\n      setFormData({\n        ...formData,\n        notesHistory: response.data.notesHistory,\n        newNote: ''\n      });\n    } catch (error) {\n      alert('Failed to add the note. Please try again.');\n    }\n  };\n\n  // Delete a note from the notes history\n  const handleDeleteNote = async index => {\n    const updatedNotesHistory = formData.notesHistory.filter((_, i) => i !== index);\n    try {\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        notesHistory: updatedNotesHistory\n      });\n      setFormData({\n        ...formData,\n        notesHistory: updatedNotesHistory\n      });\n    } catch (error) {\n      alert('Failed to delete the note. Please try again.');\n    }\n  };\n\n  // Save the work order and close the modal\n  const handleSubmit = async () => {\n    if (!workOrder || !workOrder._id) {\n      return; // Exit early if there's no valid work order or ID\n    }\n    try {\n      // Save the work order with updated information\n      const updatedData = {\n        status: formData.status,\n        taskType: formData.taskType,\n        roomNumber: formData.roomNumber,\n        details: formData.description,\n        // Ensure 'details' is updated, not 'description'\n        priority: formData.priority,\n        notesHistory: formData.notesHistory\n      };\n      await axios.put(`/api/work-orders/${workOrder._id}`, updatedData);\n      setSnackbarOpen(true);\n      fetchWorkOrders();\n      handleClose(); // Close the modal after saving\n    } catch (error) {\n      alert('Failed to update the work order. Please try again.');\n    }\n  };\n\n  // Undo action to revert to original data\n  const handleUndo = async () => {\n    try {\n      if (!originalFormData || !originalFormData._id) {\n        return; // Exit early if there's no valid work order or ID\n      }\n      setUndoing(true);\n\n      // Restore original form data locally\n      setFormData(originalFormData);\n\n      // Restore original form data on the backend\n      await axios.put(`/api/work-orders/${originalFormData._id}`, originalFormData);\n      fetchWorkOrders(); // Re-fetch work orders after undoing changes\n      setSnackbarOpen(false); // Close the Snackbar after undo\n      setUndoing(false); // Reset the undoing state\n    } catch (error) {\n      setUndoing(false); // Reset the undoing state in case of an error\n    }\n  };\n\n  // Handle closing of the Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway' || undoing) {\n      return; // Ignore clicks outside the snackbar or during undo\n    }\n    setSnackbarOpen(false); // Allow manual close\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Work Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Update the work order details below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: selectedTab,\n          onChange: handleTabChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Work Order Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Notes and Updates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), selectedTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"status-label\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"status-label\",\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleChange,\n                  fullWidth: true,\n                  label: \"Status\",\n                  children: Object.keys(statusMapping).map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: status,\n                    children: statusMapping[status]\n                  }, status, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"taskType-label\",\n                  children: \"Task Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"taskType-label\",\n                  name: \"taskType\",\n                  value: formData.taskType,\n                  onChange: handleChange,\n                  fullWidth: true,\n                  label: \"Task Type\",\n                  children: taskTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type,\n                    children: type\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Room Number\",\n                name: \"roomNumber\",\n                value: formData.roomNumber,\n                onChange: handleChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Submitted By\",\n                name: \"submittedBy\",\n                value: ((_formData$submittedBy = formData.submittedBy) === null || _formData$submittedBy === void 0 ? void 0 : _formData$submittedBy.username) || 'N/A',\n                disabled: true,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Date Created\",\n                name: \"createdDate\",\n                value: formData.createdDate,\n                fullWidth: true,\n                margin: \"normal\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Original Description\",\n                name: \"description\",\n                value: formData.description,\n                fullWidth: true,\n                multiline: true,\n                rows: 6,\n                margin: \"normal\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), selectedTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Add new note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Add new note\",\n            name: \"newNote\",\n            value: formData.newNote,\n            onChange: handleChange,\n            fullWidth: true,\n            multiline: true,\n            rows: 3,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              mt: 4\n            },\n            children: \"Notes History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: formData.notesHistory.map((note, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                borderBottom: '1px solid #ccc',\n                pb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: note.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this), \" at\", ' ', new Date(note.timestamp).toLocaleString(), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: note.note\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleDeleteNote(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 7500,\n      onClose: handleCloseSnackbar,\n      message: \"Work order updated\",\n      action: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleUndo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleCloseSnackbar,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EditWorkOrderModal, \"VcRXFKky4R4rr1ch4HFnOUO7FvM=\");\n_c = EditWorkOrderModal;\nexport default EditWorkOrderModal;\nvar _c;\n$RefreshReg$(_c, \"EditWorkOrderModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","Select","InputLabel","FormControl","Grid","Tabs","Tab","Box","Typography","IconButton","Snackbar","DeleteIcon","CloseIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","statusMapping","new","pending","delayed","closed","excluded","taskTypes","EditWorkOrderModal","open","handleClose","workOrder","fetchWorkOrders","_s","_formData$submittedBy","formData","setFormData","status","taskType","roomNumber","description","notes","submittedBy","notesHistory","newNote","createdDate","originalFormData","setOriginalFormData","selectedTab","setSelectedTab","snackbarOpen","setSnackbarOpen","undoing","setUndoing","initialData","_id","details","Date","toLocaleString","handleChange","e","target","name","value","handleTabChange","event","newValue","handleAddNote","trim","note","response","put","data","error","alert","handleDeleteNote","index","updatedNotesHistory","filter","_","i","handleSubmit","updatedData","priority","handleUndo","handleCloseSnackbar","reason","children","onClose","fullWidth","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","container","spacing","item","xs","margin","id","labelId","Object","keys","map","type","username","disabled","multiline","rows","variant","gutterBottom","color","onClick","sx","mt","mb","borderBottom","pb","timestamp","whiteSpace","size","fontSize","autoHideDuration","message","action","_c","$RefreshReg$"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  Grid,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  IconButton,\n  Snackbar\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axios from '../api/axiosConfig';\n\nconst statusMapping = {\n  new: 'New',\n  pending: 'Pending',\n  delayed: 'Delayed',\n  closed: 'Closed',\n  excluded: 'Excluded',\n  're-opened': 'Re-Opened',\n};\n\nconst taskTypes = [\n  'Clean Up / Spill',\n  'Cooling Issue',\n  'Electrical Issue',\n  'Equipment Repairs',\n  'Fire Safety',\n  'General Maintenance Request',\n  'Health and Safety',\n  'Heating Issues',\n  'Lighting Issues',\n  'Mechanical Issues',\n  'Painting / Touch Ups',\n  'Pest Control',\n  'Plumbing Issues',\n  'Waste Issues',\n];\n\nconst EditWorkOrderModal = ({ open, handleClose, workOrder, fetchWorkOrders }) => {\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [],\n    newNote: '',\n    createdDate: '', // Add createdDate to formData\n  });\n\n  const [originalFormData, setOriginalFormData] = useState(null); // Store original form data for undo\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [undoing, setUndoing] = useState(false);  // To track if undo action is in progress\n\n  useEffect(() => {\n    if (workOrder) {\n      const initialData = {\n        _id: workOrder._id || '',  // Ensure _id is included\n        status: workOrder.status || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notesHistory: workOrder.notesHistory || [],\n        createdDate: new Date(workOrder.createdDate).toLocaleString(), // Add createdDate and format it\n        newNote: '',\n      };\n\n      setFormData(initialData);\n      setOriginalFormData(initialData);  // Store the original form data with the ID\n    }\n  }, [workOrder]);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Add a new note using /add-note endpoint\n  const handleAddNote = async () => {\n    if (formData.newNote.trim() === '') {\n      return; // Prevent adding empty notes\n    }\n\n    try {\n      const newNote = {\n        note: formData.newNote,\n      };\n\n      const response = await axios.put(`/api/work-orders/${workOrder._id}/add-note`, newNote);\n\n      setFormData({\n        ...formData,\n        notesHistory: response.data.notesHistory,\n        newNote: '',\n      });\n\n    } catch (error) {\n      alert('Failed to add the note. Please try again.');\n    }\n  };\n\n  // Delete a note from the notes history\n  const handleDeleteNote = async (index) => {\n    const updatedNotesHistory = formData.notesHistory.filter((_, i) => i !== index);\n\n    try {\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        notesHistory: updatedNotesHistory\n      });\n\n      setFormData({\n        ...formData,\n        notesHistory: updatedNotesHistory,\n      });\n\n    } catch (error) {\n      alert('Failed to delete the note. Please try again.');\n    }\n  };\n\n  // Save the work order and close the modal\n  const handleSubmit = async () => {\n    if (!workOrder || !workOrder._id) {\n      return;  // Exit early if there's no valid work order or ID\n    }\n\n    try {\n      // Save the work order with updated information\n      const updatedData = {\n        status: formData.status,\n        taskType: formData.taskType,\n        roomNumber: formData.roomNumber,\n        details: formData.description, // Ensure 'details' is updated, not 'description'\n        priority: formData.priority,\n        notesHistory: formData.notesHistory,\n      };\n\n      await axios.put(`/api/work-orders/${workOrder._id}`, updatedData);\n\n      setSnackbarOpen(true);\n      fetchWorkOrders();\n      handleClose(); // Close the modal after saving\n\n    } catch (error) {\n      alert('Failed to update the work order. Please try again.');\n    }\n  };\n\n  // Undo action to revert to original data\n  const handleUndo = async () => {\n    try {\n      if (!originalFormData || !originalFormData._id) {\n        return;  // Exit early if there's no valid work order or ID\n      }\n\n      setUndoing(true);\n\n      // Restore original form data locally\n      setFormData(originalFormData);\n\n      // Restore original form data on the backend\n      await axios.put(`/api/work-orders/${originalFormData._id}`, originalFormData);\n\n      fetchWorkOrders();  // Re-fetch work orders after undoing changes\n      setSnackbarOpen(false);  // Close the Snackbar after undo\n      setUndoing(false);  // Reset the undoing state\n\n    } catch (error) {\n      setUndoing(false);  // Reset the undoing state in case of an error\n    }\n  };\n\n  // Handle closing of the Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway' || undoing) {\n      return; // Ignore clicks outside the snackbar or during undo\n    }\n    setSnackbarOpen(false); // Allow manual close\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"md\">\n        <DialogTitle>Edit Work Order</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Update the work order details below:</DialogContentText>\n\n          {/* Tabs for switching between Details and Notes */}\n          <Tabs value={selectedTab} onChange={handleTabChange}>\n            <Tab label=\"Work Order Details\" />\n            <Tab label=\"Notes and Updates\" />\n          </Tabs>\n\n          {selectedTab === 0 && (\n            <Box>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <FormControl fullWidth margin=\"normal\">\n                    <InputLabel id=\"status-label\">Status</InputLabel>\n                    <Select\n                      labelId=\"status-label\"\n                      name=\"status\"\n                      value={formData.status}\n                      onChange={handleChange}\n                      fullWidth\n                      label=\"Status\"\n                    >\n                      {Object.keys(statusMapping).map((status) => (\n                        <MenuItem key={status} value={status}>\n                          {statusMapping[status]}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl fullWidth margin=\"normal\">\n                    <InputLabel id=\"taskType-label\">Task Type</InputLabel>\n                    <Select\n                      labelId=\"taskType-label\"\n                      name=\"taskType\"\n                      value={formData.taskType}\n                      onChange={handleChange}\n                      fullWidth\n                      label=\"Task Type\"\n                    >\n                      {taskTypes.map((type) => (\n                        <MenuItem key={type} value={type}>\n                          {type}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <TextField\n                    label=\"Room Number\"\n                    name=\"roomNumber\"\n                    value={formData.roomNumber}\n                    onChange={handleChange}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    label=\"Submitted By\"\n                    name=\"submittedBy\"\n                    value={formData.submittedBy?.username || 'N/A'}\n                    disabled\n                    fullWidth\n                    margin=\"normal\"\n                  />\n\n                  {/* Date Created Field */}\n                  <TextField\n                    label=\"Date Created\"\n                    name=\"createdDate\"\n                    value={formData.createdDate}\n                    fullWidth\n                    margin=\"normal\"\n                    disabled\n                  />\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"Original Description\"\n                    name=\"description\"\n                    value={formData.description}\n                    fullWidth\n                    multiline\n                    rows={6}\n                    margin=\"normal\"\n                    disabled\n                  />\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n\n          {selectedTab === 1 && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Add new note\n              </Typography>\n              <TextField\n                label=\"Add new note\"\n                name=\"newNote\"\n                value={formData.newNote}\n                onChange={handleChange}\n                fullWidth\n                multiline\n                rows={3}\n                margin=\"normal\"\n              />\n              <Button variant=\"contained\" color=\"primary\" onClick={handleAddNote}>\n                Add Note\n              </Button>\n\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n                Notes History\n              </Typography>\n              <Box sx={{ mt: 2 }}>\n                {formData.notesHistory.map((note, index) => (\n                  <Box key={index} sx={{ mb: 2, borderBottom: '1px solid #ccc', pb: 1 }}>\n                    <Typography variant=\"body2\">\n                      <strong>{note.username}</strong> at{' '}\n                      {new Date(note.timestamp).toLocaleString()}:\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\n                      {note.note}\n                    </Typography>\n                    <IconButton size=\"small\" onClick={() => handleDeleteNote(index)}>\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar for showing success message with Undo option and an \"X\" to close */}\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={7500}\n        onClose={handleCloseSnackbar}\n        message=\"Work order updated\"\n        action={\n          <>\n            <Button color=\"inherit\" size=\"small\" onClick={handleUndo}>\n              Undo\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleCloseSnackbar}\n            >\n              <CloseIcon />\n            </IconButton>\n          </>\n        }\n      />\n    </>\n  );\n};\n\nexport default EditWorkOrderModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}