{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'../api/axiosConfig';// Import your axios instance configured with withCredentials: true\nimport Cookies from'js-cookie';// Using js-cookie to easily handle cookies\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);// Function to check authentication status on page load\nuseEffect(()=>{const token=Cookies.get('jwt');// Get JWT from the cookie\nif(token){// If the token exists, verify the token with the backend\naxios.get('/api/auth/verify',{withCredentials:true}).then(response=>{setUser(response.data.user);setIsAuthenticated(true);// Set user as authenticated\n}).catch(error=>{console.error('Token verification failed:',error);setIsAuthenticated(false);setUser(null);});}},[]);// Login function\nconst login=userData=>{setUser(userData);setIsAuthenticated(true);// Set authenticated state\n};// Logout function\nconst logout=()=>{axios.post('/api/auth/logout',{},{withCredentials:true})// Ensure that the logout clears the cookie\n.then(()=>{setUser(null);setIsAuthenticated(false);Cookies.remove('jwt');// Remove JWT cookie\n}).catch(error=>{console.error('Error logging out:',error);});};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,isAuthenticated,login,logout},children:children});};export default AuthProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","Cookies","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","token","get","withCredentials","then","response","data","catch","error","console","login","userData","logout","post","remove","Provider","value"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from '../api/axiosConfig'; // Import your axios instance configured with withCredentials: true\nimport Cookies from 'js-cookie'; // Using js-cookie to easily handle cookies\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to check authentication status on page load\n  useEffect(() => {\n    const token = Cookies.get('jwt'); // Get JWT from the cookie\n\n    if (token) {\n      // If the token exists, verify the token with the backend\n      axios\n        .get('/api/auth/verify', { withCredentials: true })\n        .then((response) => {\n          setUser(response.data.user);\n          setIsAuthenticated(true); // Set user as authenticated\n        })\n        .catch((error) => {\n          console.error('Token verification failed:', error);\n          setIsAuthenticated(false);\n          setUser(null);\n        });\n    }\n  }, []);\n\n  // Login function\n  const login = (userData) => {\n    setUser(userData);\n    setIsAuthenticated(true); // Set authenticated state\n  };\n\n  // Logout function\n  const logout = () => {\n    axios.post('/api/auth/logout', {}, { withCredentials: true }) // Ensure that the logout clears the cookie\n      .then(() => {\n        setUser(null);\n        setIsAuthenticated(false);\n        Cookies.remove('jwt'); // Remove JWT cookie\n      })\n      .catch((error) => {\n        console.error('Error logging out:', error);\n      });\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAE;AACxC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEjC,MAAO,MAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAE1C,KAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAE7D;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,KAAK,CAAGX,OAAO,CAACY,GAAG,CAAC,KAAK,CAAC,CAAE;AAElC,GAAID,KAAK,CAAE,CACT;AACAZ,KAAK,CACFa,GAAG,CAAC,kBAAkB,CAAE,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,CAClDC,IAAI,CAAEC,QAAQ,EAAK,CAClBP,OAAO,CAACO,QAAQ,CAACC,IAAI,CAACT,IAAI,CAAC,CAC3BG,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAC5B,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDR,kBAAkB,CAAC,KAAK,CAAC,CACzBF,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAC,CACN,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAY,KAAK,CAAIC,QAAQ,EAAK,CAC1Bb,OAAO,CAACa,QAAQ,CAAC,CACjBX,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAC5B,CAAC,CAED;AACA,KAAM,CAAAY,MAAM,CAAGA,CAAA,GAAM,CACnBvB,KAAK,CAACwB,IAAI,CAAC,kBAAkB,CAAE,CAAC,CAAC,CAAE,CAAEV,eAAe,CAAE,IAAK,CAAC,CAAE;AAAA,CAC3DC,IAAI,CAAC,IAAM,CACVN,OAAO,CAAC,IAAI,CAAC,CACbE,kBAAkB,CAAC,KAAK,CAAC,CACzBV,OAAO,CAACwB,MAAM,CAAC,KAAK,CAAC,CAAE;AACzB,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CAAC,CAAC,CACN,CAAC,CAED,mBACEhB,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,IAAI,CAAEE,eAAe,CAAEW,KAAK,CAAEE,MAAO,CAAE,CAAAhB,QAAA,CACnEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}