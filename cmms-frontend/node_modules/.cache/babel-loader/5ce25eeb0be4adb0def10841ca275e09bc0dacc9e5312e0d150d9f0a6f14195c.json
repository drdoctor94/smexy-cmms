{"ast":null,"code":"var _jsxFileName = \"/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, MenuItem, Select, InputLabel, FormControl, Grid, Tabs, Tab, Box, Typography, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport axios from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statuses = ['new', 'pending', 'delayed', 'closed', 'excluded', 're-opened'];\nconst taskTypes = ['Clean Up / Spill', 'Cooling Issue', 'Electrical Issue', 'Equipment Repairs', 'Fire Safety', 'General Maintenance Request', 'Health and Safety', 'Heating Issues', 'Lighting Issues', 'Mechanical Issues', 'Painting / Touch Ups', 'Pest Control', 'Plumbing Issues', 'Waste Issues'];\nconst EditWorkOrderModal = ({\n  open,\n  handleClose,\n  workOrder,\n  fetchWorkOrders\n}) => {\n  _s();\n  var _formData$submittedBy;\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [],\n    // Initialize notesHistory\n    newNote: ''\n  });\n  const [selectedTab, setSelectedTab] = useState(0);\n  useEffect(() => {\n    if (workOrder) {\n      fetchUpdatedWorkOrder(); // Fetch updated work order details when the modal is opened\n    }\n  }, [workOrder]);\n  const fetchUpdatedWorkOrder = async () => {\n    try {\n      const response = await axios.get(`/api/work-orders/${workOrder._id}`);\n      setFormData({\n        status: response.data.status || '',\n        taskType: response.data.taskType || '',\n        roomNumber: response.data.roomNumber || '',\n        description: response.data.details || '',\n        notes: response.data.notes || '',\n        submittedBy: response.data.submittedBy || '',\n        notesHistory: response.data.notesHistory || [],\n        newNote: ''\n      });\n    } catch (error) {\n      console.error('Error fetching work order:', error);\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Separate API call to add a note using /add-note endpoint\n  const handleAddNote = async () => {\n    if (formData.newNote.trim() === '') {\n      return; // Prevent adding empty notes\n    }\n    try {\n      const newNote = {\n        note: formData.newNote\n      };\n\n      // Send the new note to the backend using the dedicated route\n      await axios.put(`/api/work-orders/${workOrder._id}/add-note`, newNote);\n\n      // Refetch the updated work order from the backend to ensure the notes history is up-to-date\n      await fetchUpdatedWorkOrder();\n    } catch (error) {\n      console.error('Error adding note:', error);\n      alert('Failed to add the note. Please try again.');\n    }\n  };\n\n  // Delete a note from the notes history directly in the database\n  const handleDeleteNote = async index => {\n    const updatedNotesHistory = formData.notesHistory.filter((_, i) => i !== index);\n    try {\n      // Save updated notesHistory to the backend, removing the specific note\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        notesHistory: updatedNotesHistory\n      });\n\n      // Refetch the updated work order from the backend to ensure the notes history is up-to-date\n      await fetchUpdatedWorkOrder();\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      alert('Failed to delete the note. Please try again.');\n    }\n  };\n\n  // Save the general information of the work order using /api/work-orders/:id\n  const handleSubmit = async () => {\n    try {\n      // Save the entire work order (other fields can also be saved)\n      await axios.put(`/api/work-orders/${workOrder._id}`, formData);\n      alert('Work order updated successfully!');\n      fetchWorkOrders();\n      handleClose();\n    } catch (error) {\n      console.error('Error updating work order:', error);\n      alert('Failed to update the work order. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Work Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Update the work order details below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: selectedTab,\n        onChange: handleTabChange,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Work Order Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Notes and Updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), selectedTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"normal\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"status\",\n                value: formData.status,\n                onChange: handleChange,\n                fullWidth: true,\n                children: statuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status,\n                  children: status\n                }, status, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"normal\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Task Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"taskType\",\n                value: formData.taskType,\n                onChange: handleChange,\n                fullWidth: true,\n                children: taskTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Room Number\",\n              name: \"roomNumber\",\n              value: formData.roomNumber,\n              onChange: handleChange,\n              fullWidth: true,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Submitted By\",\n              name: \"submittedBy\",\n              value: ((_formData$submittedBy = formData.submittedBy) === null || _formData$submittedBy === void 0 ? void 0 : _formData$submittedBy.username) || 'N/A',\n              disabled: true,\n              fullWidth: true,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Original Description\",\n              name: \"description\",\n              value: formData.description,\n              fullWidth: true,\n              multiline: true,\n              rows: 6,\n              margin: \"normal\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), selectedTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Add new note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Add new note\",\n          name: \"newNote\",\n          value: formData.newNote,\n          onChange: handleChange,\n          fullWidth: true,\n          multiline: true,\n          rows: 3,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleAddNote,\n          children: \"Add Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            mt: 4\n          },\n          children: \"Notes History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: formData.notesHistory.map((note, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              borderBottom: '1px solid #ccc',\n              pb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: note.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), \" at\", ' ', new Date(note.timestamp).toLocaleString(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                whiteSpace: 'pre-wrap'\n              } // Ensures newlines in the note are preserved\n              ,\n              children: note.note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDeleteNote(index),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(EditWorkOrderModal, \"nDSw90W6Et3Avtc2lyGroJQl4gA=\");\n_c = EditWorkOrderModal;\nexport default EditWorkOrderModal;\nvar _c;\n$RefreshReg$(_c, \"EditWorkOrderModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","Select","InputLabel","FormControl","Grid","Tabs","Tab","Box","Typography","IconButton","DeleteIcon","axios","jsxDEV","_jsxDEV","statuses","taskTypes","EditWorkOrderModal","open","handleClose","workOrder","fetchWorkOrders","_s","_formData$submittedBy","formData","setFormData","status","taskType","roomNumber","description","notes","submittedBy","notesHistory","newNote","selectedTab","setSelectedTab","fetchUpdatedWorkOrder","response","get","_id","data","details","error","console","handleChange","e","target","name","value","handleTabChange","event","newValue","handleAddNote","trim","note","put","alert","handleDeleteNote","index","updatedNotesHistory","filter","_","i","handleSubmit","onClose","fullWidth","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","container","spacing","item","xs","margin","map","type","username","disabled","multiline","rows","variant","gutterBottom","color","onClick","sx","mt","mb","borderBottom","pb","Date","timestamp","toLocaleString","whiteSpace","size","fontSize","_c","$RefreshReg$"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  Grid,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  IconButton,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport axios from '../api/axiosConfig';\n\nconst statuses = ['new', 'pending', 'delayed', 'closed', 'excluded', 're-opened'];\nconst taskTypes = [\n  'Clean Up / Spill',\n  'Cooling Issue',\n  'Electrical Issue',\n  'Equipment Repairs',\n  'Fire Safety',\n  'General Maintenance Request',\n  'Health and Safety',\n  'Heating Issues',\n  'Lighting Issues',\n  'Mechanical Issues',\n  'Painting / Touch Ups',\n  'Pest Control',\n  'Plumbing Issues',\n  'Waste Issues',\n];\n\nconst EditWorkOrderModal = ({ open, handleClose, workOrder, fetchWorkOrders }) => {\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [], // Initialize notesHistory\n    newNote: '',\n  });\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  useEffect(() => {\n    if (workOrder) {\n      fetchUpdatedWorkOrder(); // Fetch updated work order details when the modal is opened\n    }\n  }, [workOrder]);\n\n  const fetchUpdatedWorkOrder = async () => {\n    try {\n      const response = await axios.get(`/api/work-orders/${workOrder._id}`);\n      setFormData({\n        status: response.data.status || '',\n        taskType: response.data.taskType || '',\n        roomNumber: response.data.roomNumber || '',\n        description: response.data.details || '',\n        notes: response.data.notes || '',\n        submittedBy: response.data.submittedBy || '',\n        notesHistory: response.data.notesHistory || [],\n        newNote: '',\n      });\n    } catch (error) {\n      console.error('Error fetching work order:', error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Separate API call to add a note using /add-note endpoint\n  const handleAddNote = async () => {\n    if (formData.newNote.trim() === '') {\n      return; // Prevent adding empty notes\n    }\n\n    try {\n      const newNote = {\n        note: formData.newNote,\n      };\n\n      // Send the new note to the backend using the dedicated route\n      await axios.put(`/api/work-orders/${workOrder._id}/add-note`, newNote);\n\n      // Refetch the updated work order from the backend to ensure the notes history is up-to-date\n      await fetchUpdatedWorkOrder();\n    } catch (error) {\n      console.error('Error adding note:', error);\n      alert('Failed to add the note. Please try again.');\n    }\n  };\n\n  // Delete a note from the notes history directly in the database\n  const handleDeleteNote = async (index) => {\n    const updatedNotesHistory = formData.notesHistory.filter((_, i) => i !== index);\n\n    try {\n      // Save updated notesHistory to the backend, removing the specific note\n      await axios.put(`/api/work-orders/${workOrder._id}`, {\n        notesHistory: updatedNotesHistory,\n      });\n\n      // Refetch the updated work order from the backend to ensure the notes history is up-to-date\n      await fetchUpdatedWorkOrder();\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      alert('Failed to delete the note. Please try again.');\n    }\n  };\n\n  // Save the general information of the work order using /api/work-orders/:id\n  const handleSubmit = async () => {\n    try {\n      // Save the entire work order (other fields can also be saved)\n      await axios.put(`/api/work-orders/${workOrder._id}`, formData);\n\n      alert('Work order updated successfully!');\n      fetchWorkOrders();\n      handleClose();\n    } catch (error) {\n      console.error('Error updating work order:', error);\n      alert('Failed to update the work order. Please try again.');\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>Edit Work Order</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Update the work order details below:</DialogContentText>\n\n        {/* Tabs for switching between Details and Notes */}\n        <Tabs value={selectedTab} onChange={handleTabChange}>\n          <Tab label=\"Work Order Details\" />\n          <Tab label=\"Notes and Updates\" />\n        </Tabs>\n\n        {selectedTab === 0 && (\n          <Box>\n            <Grid container spacing={2}>\n              {/* Left side fields */}\n              <Grid item xs={6}>\n                <FormControl fullWidth margin=\"normal\">\n                  <InputLabel>Status</InputLabel>\n                  <Select\n                    name=\"status\"\n                    value={formData.status}\n                    onChange={handleChange}\n                    fullWidth\n                  >\n                    {statuses.map((status) => (\n                      <MenuItem key={status} value={status}>\n                        {status}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <FormControl fullWidth margin=\"normal\">\n                  <InputLabel>Task Type</InputLabel>\n                  <Select\n                    name=\"taskType\"\n                    value={formData.taskType}\n                    onChange={handleChange}\n                    fullWidth\n                  >\n                    {taskTypes.map((type) => (\n                      <MenuItem key={type} value={type}>\n                        {type}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <TextField\n                  label=\"Room Number\"\n                  name=\"roomNumber\"\n                  value={formData.roomNumber}\n                  onChange={handleChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  label=\"Submitted By\"\n                  name=\"submittedBy\"\n                  value={formData.submittedBy?.username || 'N/A'}\n                  disabled\n                  fullWidth\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Original Description\"\n                  name=\"description\"\n                  value={formData.description}\n                  fullWidth\n                  multiline\n                  rows={6}\n                  margin=\"normal\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n\n        {selectedTab === 1 && (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Add new note\n            </Typography>\n            <TextField\n              label=\"Add new note\"\n              name=\"newNote\"\n              value={formData.newNote}\n              onChange={handleChange}\n              fullWidth\n              multiline\n              rows={3}\n              margin=\"normal\"\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddNote}>\n              Add Note\n            </Button>\n\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n              Notes History\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              {formData.notesHistory.map((note, index) => (\n                <Box key={index} sx={{ mb: 2, borderBottom: '1px solid #ccc', pb: 1 }}>\n                  <Typography variant=\"body2\">\n                    <strong>{note.username}</strong> at{' '}\n                    {new Date(note.timestamp).toLocaleString()}:\n                  </Typography>\n                  <Typography\n                    variant=\"body1\"\n                    sx={{ whiteSpace: 'pre-wrap' }} // Ensures newlines in the note are preserved\n                  >\n                    {note.note}\n                  </Typography>\n                  <IconButton size=\"small\" onClick={() => handleDeleteNote(index)}>\n                    <DeleteIcon fontSize=\"small\" />\n                  </IconButton>\n                </Box>\n              ))}\n            </Box>\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={handleSubmit} color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditWorkOrderModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,MAAM,EACNC,SAAS,EACTC,MAAM,EACNC,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,WAAW,EACXC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,WAAW,EACXC,IAAI,EACJC,IAAI,EACJC,GAAG,EACHC,GAAG,EACHC,UAAU,EACVC,UAAU,QACL,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,CAAC;AACjF,MAAMC,SAAS,GAAG,CAChB,kBAAkB,EAClB,eAAe,EACf,kBAAkB,EAClB,mBAAmB,EACnB,aAAa,EACb,6BAA6B,EAC7B,mBAAmB,EACnB,gBAAgB,EAChB,iBAAiB,EACjB,mBAAmB,EACnB,sBAAsB,EACtB,cAAc,EACd,iBAAiB,EACjB,cAAc,CACf;AAED,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAChF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC;IACvCkC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAAE;IAClBC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAI2B,SAAS,EAAE;MACbgB,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC;EAEf,MAAMgB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,oBAAoBlB,SAAS,CAACmB,GAAG,EAAE,CAAC;MACrEd,WAAW,CAAC;QACVC,MAAM,EAAEW,QAAQ,CAACG,IAAI,CAACd,MAAM,IAAI,EAAE;QAClCC,QAAQ,EAAEU,QAAQ,CAACG,IAAI,CAACb,QAAQ,IAAI,EAAE;QACtCC,UAAU,EAAES,QAAQ,CAACG,IAAI,CAACZ,UAAU,IAAI,EAAE;QAC1CC,WAAW,EAAEQ,QAAQ,CAACG,IAAI,CAACC,OAAO,IAAI,EAAE;QACxCX,KAAK,EAAEO,QAAQ,CAACG,IAAI,CAACV,KAAK,IAAI,EAAE;QAChCC,WAAW,EAAEM,QAAQ,CAACG,IAAI,CAACT,WAAW,IAAI,EAAE;QAC5CC,YAAY,EAAEK,QAAQ,CAACG,IAAI,CAACR,YAAY,IAAI,EAAE;QAC9CC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BpB,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACqB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC3ChB,cAAc,CAACgB,QAAQ,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI5B,QAAQ,CAACS,OAAO,CAACoB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAClC,OAAO,CAAC;IACV;IAEA,IAAI;MACF,MAAMpB,OAAO,GAAG;QACdqB,IAAI,EAAE9B,QAAQ,CAACS;MACjB,CAAC;;MAED;MACA,MAAMrB,KAAK,CAAC2C,GAAG,CAAC,oBAAoBnC,SAAS,CAACmB,GAAG,WAAW,EAAEN,OAAO,CAAC;;MAEtE;MACA,MAAMG,qBAAqB,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1Cc,KAAK,CAAC,2CAA2C,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,mBAAmB,GAAGnC,QAAQ,CAACQ,YAAY,CAAC4B,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IAE/E,IAAI;MACF;MACA,MAAM9C,KAAK,CAAC2C,GAAG,CAAC,oBAAoBnC,SAAS,CAACmB,GAAG,EAAE,EAAE;QACnDP,YAAY,EAAE2B;MAChB,CAAC,CAAC;;MAEF;MACA,MAAMvB,qBAAqB,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5Cc,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMnD,KAAK,CAAC2C,GAAG,CAAC,oBAAoBnC,SAAS,CAACmB,GAAG,EAAE,EAAEf,QAAQ,CAAC;MAE9DgC,KAAK,CAAC,kCAAkC,CAAC;MACzCnC,eAAe,CAAC,CAAC;MACjBF,WAAW,CAAC,CAAC;IACf,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDc,KAAK,CAAC,oDAAoD,CAAC;IAC7D;EACF,CAAC;EAED,oBACE1C,OAAA,CAAClB,MAAM;IAACsB,IAAI,EAAEA,IAAK;IAAC8C,OAAO,EAAE7C,WAAY;IAAC8C,SAAS;IAACC,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBAC/DrD,OAAA,CAACd,WAAW;MAAAmE,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC1CzD,OAAA,CAAChB,aAAa;MAAAqE,QAAA,gBACZrD,OAAA,CAACf,iBAAiB;QAAAoE,QAAA,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,eAG3EzD,OAAA,CAACR,IAAI;QAAC0C,KAAK,EAAEd,WAAY;QAACsC,QAAQ,EAAEvB,eAAgB;QAAAkB,QAAA,gBAClDrD,OAAA,CAACP,GAAG;UAACkE,KAAK,EAAC;QAAoB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClCzD,OAAA,CAACP,GAAG;UAACkE,KAAK,EAAC;QAAmB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,EAENrC,WAAW,KAAK,CAAC,iBAChBpB,OAAA,CAACN,GAAG;QAAA2D,QAAA,eACFrD,OAAA,CAACT,IAAI;UAACqE,SAAS;UAACC,OAAO,EAAE,CAAE;UAAAR,QAAA,gBAEzBrD,OAAA,CAACT,IAAI;YAACuE,IAAI;YAACC,EAAE,EAAE,CAAE;YAAAV,QAAA,gBACfrD,OAAA,CAACV,WAAW;cAAC6D,SAAS;cAACa,MAAM,EAAC,QAAQ;cAAAX,QAAA,gBACpCrD,OAAA,CAACX,UAAU;gBAAAgE,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/BzD,OAAA,CAACZ,MAAM;gBACL6C,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAExB,QAAQ,CAACE,MAAO;gBACvB8C,QAAQ,EAAE5B,YAAa;gBACvBqB,SAAS;gBAAAE,QAAA,EAERpD,QAAQ,CAACgE,GAAG,CAAErD,MAAM,iBACnBZ,OAAA,CAACb,QAAQ;kBAAc+C,KAAK,EAAEtB,MAAO;kBAAAyC,QAAA,EAClCzC;gBAAM,GADMA,MAAM;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEX,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAEdzD,OAAA,CAACV,WAAW;cAAC6D,SAAS;cAACa,MAAM,EAAC,QAAQ;cAAAX,QAAA,gBACpCrD,OAAA,CAACX,UAAU;gBAAAgE,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAClCzD,OAAA,CAACZ,MAAM;gBACL6C,IAAI,EAAC,UAAU;gBACfC,KAAK,EAAExB,QAAQ,CAACG,QAAS;gBACzB6C,QAAQ,EAAE5B,YAAa;gBACvBqB,SAAS;gBAAAE,QAAA,EAERnD,SAAS,CAAC+D,GAAG,CAAEC,IAAI,iBAClBlE,OAAA,CAACb,QAAQ;kBAAY+C,KAAK,EAAEgC,IAAK;kBAAAb,QAAA,EAC9Ba;gBAAI,GADQA,IAAI;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAET,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAEdzD,OAAA,CAACnB,SAAS;cACR8E,KAAK,EAAC,aAAa;cACnB1B,IAAI,EAAC,YAAY;cACjBC,KAAK,EAAExB,QAAQ,CAACI,UAAW;cAC3B4C,QAAQ,EAAE5B,YAAa;cACvBqB,SAAS;cACTa,MAAM,EAAC;YAAQ;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,eAEFzD,OAAA,CAACnB,SAAS;cACR8E,KAAK,EAAC,cAAc;cACpB1B,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAE,EAAAzB,qBAAA,GAAAC,QAAQ,CAACO,WAAW,cAAAR,qBAAA,uBAApBA,qBAAA,CAAsB0D,QAAQ,KAAI,KAAM;cAC/CC,QAAQ;cACRjB,SAAS;cACTa,MAAM,EAAC;YAAQ;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEPzD,OAAA,CAACT,IAAI;YAACuE,IAAI;YAACC,EAAE,EAAE,CAAE;YAAAV,QAAA,eACfrD,OAAA,CAACnB,SAAS;cACR8E,KAAK,EAAC,sBAAsB;cAC5B1B,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAExB,QAAQ,CAACK,WAAY;cAC5BoC,SAAS;cACTkB,SAAS;cACTC,IAAI,EAAE,CAAE;cACRN,MAAM,EAAC,QAAQ;cACfI,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN,EAEArC,WAAW,KAAK,CAAC,iBAChBpB,OAAA,CAACN,GAAG;QAAA2D,QAAA,gBACFrD,OAAA,CAACL,UAAU;UAAC4E,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAnB,QAAA,EAAC;QAEtC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbzD,OAAA,CAACnB,SAAS;UACR8E,KAAK,EAAC,cAAc;UACpB1B,IAAI,EAAC,SAAS;UACdC,KAAK,EAAExB,QAAQ,CAACS,OAAQ;UACxBuC,QAAQ,EAAE5B,YAAa;UACvBqB,SAAS;UACTkB,SAAS;UACTC,IAAI,EAAE,CAAE;UACRN,MAAM,EAAC;QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACFzD,OAAA,CAACpB,MAAM;UAAC2F,OAAO,EAAC,WAAW;UAACE,KAAK,EAAC,SAAS;UAACC,OAAO,EAAEpC,aAAc;UAAAe,QAAA,EAAC;QAEpE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETzD,OAAA,CAACL,UAAU;UAAC4E,OAAO,EAAC,IAAI;UAACC,YAAY;UAACG,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAvB,QAAA,EAAC;QAErD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbzD,OAAA,CAACN,GAAG;UAACiF,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAvB,QAAA,EAChB3C,QAAQ,CAACQ,YAAY,CAAC+C,GAAG,CAAC,CAACzB,IAAI,EAAEI,KAAK,kBACrC5C,OAAA,CAACN,GAAG;YAAaiF,EAAE,EAAE;cAAEE,EAAE,EAAE,CAAC;cAAEC,YAAY,EAAE,gBAAgB;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAA1B,QAAA,gBACpErD,OAAA,CAACL,UAAU;cAAC4E,OAAO,EAAC,OAAO;cAAAlB,QAAA,gBACzBrD,OAAA;gBAAAqD,QAAA,EAASb,IAAI,CAAC2B;cAAQ;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,OAAG,EAAC,GAAG,EACtC,IAAIuB,IAAI,CAACxC,IAAI,CAACyC,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,EAAC,GAC7C;YAAA;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbzD,OAAA,CAACL,UAAU;cACT4E,OAAO,EAAC,OAAO;cACfI,EAAE,EAAE;gBAAEQ,UAAU,EAAE;cAAW,CAAE,CAAC;cAAA;cAAA9B,QAAA,EAE/Bb,IAAI,CAACA;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACbzD,OAAA,CAACJ,UAAU;cAACwF,IAAI,EAAC,OAAO;cAACV,OAAO,EAAEA,CAAA,KAAM/B,gBAAgB,CAACC,KAAK,CAAE;cAAAS,QAAA,eAC9DrD,OAAA,CAACH,UAAU;gBAACwF,QAAQ,EAAC;cAAO;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC;UAAA,GAbLb,KAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eAChBzD,OAAA,CAACjB,aAAa;MAAAsE,QAAA,gBACZrD,OAAA,CAACpB,MAAM;QAAC8F,OAAO,EAAErE,WAAY;QAACoE,KAAK,EAAC,WAAW;QAAApB,QAAA,EAAC;MAEhD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzD,OAAA,CAACpB,MAAM;QAAC8F,OAAO,EAAEzB,YAAa;QAACwB,KAAK,EAAC,SAAS;QAAApB,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEb,CAAC;AAACjD,EAAA,CAjPIL,kBAAkB;AAAAmF,EAAA,GAAlBnF,kBAAkB;AAmPxB,eAAeA,kBAAkB;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}