{"ast":null,"code":"var _jsxFileName = \"/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Button } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport axios from '../api/axiosConfig';\nimport EditUserModal from './EditUserModal'; // Import the EditUserModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // State to track the selected user\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n\n  useEffect(() => {\n    fetchUsers(); // Fetch users when the component mounts\n  }, []);\n  const fetchUsers = () => {\n    axios.get('/api/users').then(response => setUsers(response.data)).catch(error => console.error(error));\n  };\n  const handleEditClick = user => {\n    setSelectedUser(user); // Set the selected user to be edited\n    setIsModalOpen(true); // Open the modal\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false); // Close the modal\n    setSelectedUser(null); // Reset the selected user\n    fetchUsers(); // Refresh the user list after editing\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleEditClick(user),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(EditUserModal, {\n      open: isModalOpen,\n      handleClose: handleModalClose,\n      user: selectedUser // Pass the selected user's details to the modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"DshbngzBCj+wgbFD9EAT7GrJgTA=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useEffect","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Button","EditIcon","axios","EditUserModal","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","selectedUser","setSelectedUser","isModalOpen","setIsModalOpen","fetchUsers","get","then","response","data","catch","error","console","handleEditClick","user","handleModalClose","component","children","fileName","_jsxFileName","lineNumber","columnNumber","map","username","role","onClick","_id","open","handleClose","_c","$RefreshReg$"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/UserManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Button } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport axios from '../api/axiosConfig';\nimport EditUserModal from './EditUserModal'; // Import the EditUserModal component\n\nconst UserManagement = () => {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // State to track the selected user\n  const [isModalOpen, setIsModalOpen] = useState(false);  // State to control modal visibility\n\n  useEffect(() => {\n    fetchUsers(); // Fetch users when the component mounts\n  }, []);\n\n  const fetchUsers = () => {\n    axios.get('/api/users')\n      .then(response => setUsers(response.data))\n      .catch(error => console.error(error));\n  };\n\n  const handleEditClick = (user) => {\n    setSelectedUser(user);  // Set the selected user to be edited\n    setIsModalOpen(true);   // Open the modal\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);   // Close the modal\n    setSelectedUser(null);   // Reset the selected user\n    fetchUsers();            // Refresh the user list after editing\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Username</TableCell>\n            <TableCell>Role</TableCell>\n            <TableCell>Actions</TableCell> {/* Add a new column for actions */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map(user => (\n            <TableRow key={user._id}>\n              <TableCell>{user.username}</TableCell>\n              <TableCell>{user.role}</TableCell>\n              <TableCell>\n                {/* Edit button to trigger the modal */}\n                <IconButton onClick={() => handleEditClick(user)}>\n                  <EditIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      {/* EditUserModal Component */}\n      {selectedUser && (\n        <EditUserModal\n          open={isModalOpen}\n          handleClose={handleModalClose}\n          user={selectedUser}  // Pass the selected user's details to the modal\n        />\n      )}\n    </TableContainer>\n  );\n};\n\nexport default UserManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}