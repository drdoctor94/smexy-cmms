{"ast":null,"code":"var _jsxFileName = \"/Users/haxordee/smexy-cmms/cmms-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from '../api/axiosConfig'; // Import your axios instance configured with withCredentials: true\nimport Cookies from 'js-cookie'; // Using js-cookie to easily handle cookies\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to check authentication status on page load\n  useEffect(() => {\n    const token = Cookies.get('jwt'); // Get JWT from the cookie\n\n    if (token) {\n      // If the token exists, verify the token with the backend\n      axios.get('/api/auth/verify', {\n        withCredentials: true\n      }).then(response => {\n        setUser(response.data.user);\n        setIsAuthenticated(true); // Set user as authenticated\n      }).catch(error => {\n        console.error('Token verification failed:', error);\n        setIsAuthenticated(false);\n        setUser(null);\n      });\n    }\n  }, []);\n\n  // Login function\n  const login = userData => {\n    setUser(userData);\n    setIsAuthenticated(true); // Set authenticated state\n  };\n\n  // Logout function\n  const logout = () => {\n    axios.post('/api/auth/logout', {}, {\n      withCredentials: true\n    }) // Ensure that the logout clears the cookie\n    .then(() => {\n      setUser(null);\n      setIsAuthenticated(false);\n      Cookies.remove('jwt'); // Remove JWT cookie\n    }).catch(error => {\n      console.error('Error logging out:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Uq7KcTiOseX3k63CKoUNgtSkdNA=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","Cookies","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","token","get","withCredentials","then","response","data","catch","error","console","login","userData","logout","post","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from '../api/axiosConfig'; // Import your axios instance configured with withCredentials: true\nimport Cookies from 'js-cookie'; // Using js-cookie to easily handle cookies\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Function to check authentication status on page load\n  useEffect(() => {\n    const token = Cookies.get('jwt'); // Get JWT from the cookie\n\n    if (token) {\n      // If the token exists, verify the token with the backend\n      axios\n        .get('/api/auth/verify', { withCredentials: true })\n        .then((response) => {\n          setUser(response.data.user);\n          setIsAuthenticated(true); // Set user as authenticated\n        })\n        .catch((error) => {\n          console.error('Token verification failed:', error);\n          setIsAuthenticated(false);\n          setUser(null);\n        });\n    }\n  }, []);\n\n  // Login function\n  const login = (userData) => {\n    setUser(userData);\n    setIsAuthenticated(true); // Set authenticated state\n  };\n\n  // Logout function\n  const logout = () => {\n    axios.post('/api/auth/logout', {}, { withCredentials: true }) // Ensure that the logout clears the cookie\n      .then(() => {\n        setUser(null);\n        setIsAuthenticated(false);\n        Cookies.remove('jwt'); // Remove JWT cookie\n      })\n      .catch((error) => {\n        console.error('Error logging out:', error);\n      });\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AACxC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGX,OAAO,CAACY,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;IAElC,IAAID,KAAK,EAAE;MACT;MACAZ,KAAK,CACFa,GAAG,CAAC,kBAAkB,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;QAClBP,OAAO,CAACO,QAAQ,CAACC,IAAI,CAACT,IAAI,CAAC;QAC3BG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDR,kBAAkB,CAAC,KAAK,CAAC;QACzBF,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMY,KAAK,GAAIC,QAAQ,IAAK;IAC1Bb,OAAO,CAACa,QAAQ,CAAC;IACjBX,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACnBvB,KAAK,CAACwB,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE;MAAEV,eAAe,EAAE;IAAK,CAAC,CAAC,CAAC;IAAA,CAC3DC,IAAI,CAAC,MAAM;MACVN,OAAO,CAAC,IAAI,CAAC;MACbE,kBAAkB,CAAC,KAAK,CAAC;MACzBV,OAAO,CAACwB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;EAED,oBACEhB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,IAAI;MAAEE,eAAe;MAAEW,KAAK;MAAEE;IAAO,CAAE;IAAAjB,QAAA,EACnEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CAhDIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAkDlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}