{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\OneDrive\\\\Desktop\\\\smexy-cmms\\\\cmms-frontend\\\\src\\\\pages\\\\EditWorkOrderModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, MenuItem, Select, InputLabel, FormControl, Grid, Tabs, Tab, Box, Typography, IconButton, Snackbar, Tooltip, Chip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport axios from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditWorkOrderModal = ({\n  open,\n  handleClose,\n  workOrder,\n  fetchWorkOrders\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm')); // Determine if it's mobile or not\n\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [],\n    newNote: '',\n    createdDate: '',\n    attachments: []\n  });\n  const [originalFormData, setOriginalFormData] = useState(null);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [tooltipText, setTooltipText] = useState(\"Copy Task ID\");\n  const [tooltipOpen, setTooltipOpen] = useState(false); // Control tooltip state\n  const [copied, setCopied] = useState(false); // New state to handle copy action\n  const [selectedFiles, setSelectedFiles] = useState([]); // State for file selection\n\n  useEffect(() => {\n    if (workOrder) {\n      const initialData = {\n        _id: workOrder._id || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notesHistory: workOrder.notesHistory || [],\n        createdDate: new Date(workOrder.createdDate).toLocaleString(),\n        attachments: workOrder.attachments || [],\n        submittedBy: workOrder.submittedBy ? `${workOrder.submittedBy.firstName} ${workOrder.submittedBy.lastName}` : 'N/A',\n        newNote: ''\n      };\n      setFormData(initialData);\n      setOriginalFormData(initialData);\n    }\n  }, [workOrder]);\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleCopyTaskId = async () => {\n    if (workOrder !== null && workOrder !== void 0 && workOrder.workOrderId) {\n      try {\n        await navigator.clipboard.writeText(workOrder.workOrderId);\n        setTooltipText(\"Copied!\");\n        setTooltipOpen(true);\n        setCopied(true); // Set copied state to true\n        setTimeout(() => {\n          setTooltipOpen(false);\n          setCopied(false); // Reset copied state after tooltip disappears\n        }, 1500);\n      } catch (error) {\n        setTooltipText(\"Failed to copy\");\n        setTooltipOpen(true);\n        setTimeout(() => setTooltipOpen(false), 1500);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: \"md\",\n      fullScreen: isMobile,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Edit Work Order\", (workOrder === null || workOrder === void 0 ? void 0 : workOrder.workOrderId) && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: tooltipText,\n          arrow: true,\n          open: tooltipOpen // Tooltip only shows when clicked or hovered\n          ,\n          onClose: () => setTooltipOpen(false),\n          disableHoverListener: isMobile || copied // Disable hover when copied is true\n          ,\n          placement: \"top\",\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Task ID: ${workOrder.workOrderId}`,\n            onClick: handleCopyTaskId,\n            onMouseEnter: () => !isMobile && !copied && setTooltipOpen(true) // Only show on hover if not copied\n            ,\n            onMouseLeave: () => !isMobile && !copied && setTooltipOpen(false) // Only close on hover out if not copied\n            ,\n            onTouchEnd: handleCopyTaskId // For mobile, tap works without hover\n            ,\n            sx: {\n              float: 'right',\n              cursor: 'pointer',\n              fontWeight: 'bold',\n              color: 'primary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Update the work order details below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: selectedTab,\n          onChange: handleTabChange,\n          variant: \"scrollable\",\n          scrollButtons: false,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Work Order Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Notes and Updates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), selectedTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleChange,\n                  label: \"Status\",\n                  children: Object.keys(statusMapping).map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: status,\n                    children: statusMapping[status]\n                  }, status, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Task Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"taskType\",\n                  value: formData.taskType,\n                  onChange: handleChange,\n                  label: \"Task Type\",\n                  children: taskTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type,\n                    children: type\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Room Number\",\n                name: \"roomNumber\",\n                value: formData.roomNumber,\n                onChange: handleChange,\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Submitted By\",\n                name: \"submittedBy\",\n                value: formData.submittedBy || 'N/A',\n                disabled: true,\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Date Created\",\n                name: \"createdDate\",\n                value: formData.createdDate,\n                fullWidth: true,\n                margin: \"normal\",\n                disabled: true,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Original Description\",\n                name: \"description\",\n                value: formData.description,\n                fullWidth: true,\n                multiline: true,\n                rows: isMobile ? 3 : 6,\n                margin: \"normal\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), selectedTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Add new note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Add new note\",\n            name: \"newNote\",\n            value: formData.newNote,\n            onChange: handleChange,\n            fullWidth: true,\n            multiline: true,\n            rows: isMobile ? 3 : 5,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              mt: 4\n            },\n            children: \"Notes History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: formData.notesHistory.map((note, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                borderBottom: '1px solid #ccc',\n                pb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: note.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this), \" at\", ' ', new Date(note.timestamp).toLocaleString(), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: note.note\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleDeleteNote(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), selectedTab === 2 && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Existing Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), formData.attachments.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            children: formData.attachments.map((attachment, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDownloadAttachment(attachment),\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    padding: 0,\n                    color: 'blue',\n                    textDecoration: 'underline',\n                    cursor: 'pointer'\n                  },\n                  children: attachment.split('/').pop()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleDeleteAttachment(attachment.split('/').pop()),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No attachments available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              mt: 4\n            },\n            children: \"Upload New Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleUploadAttachments,\n            children: \"Upload Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 7500,\n      onClose: handleCloseSnackbar,\n      message: \"Work order updated\",\n      action: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleUndo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleCloseSnackbar,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EditWorkOrderModal, \"HyqEBb0oVXXBqwGNimKBbeqQ/1k=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = EditWorkOrderModal;\nexport default EditWorkOrderModal;\nvar _c;\n$RefreshReg$(_c, \"EditWorkOrderModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","Select","InputLabel","FormControl","Grid","Tabs","Tab","Box","Typography","IconButton","Snackbar","Tooltip","Chip","DeleteIcon","CloseIcon","useMediaQuery","useTheme","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","EditWorkOrderModal","open","handleClose","workOrder","fetchWorkOrders","_s","theme","isMobile","breakpoints","down","formData","setFormData","status","taskType","roomNumber","description","notes","submittedBy","notesHistory","newNote","createdDate","attachments","originalFormData","setOriginalFormData","selectedTab","setSelectedTab","snackbarOpen","setSnackbarOpen","tooltipText","setTooltipText","tooltipOpen","setTooltipOpen","copied","setCopied","selectedFiles","setSelectedFiles","initialData","_id","details","Date","toLocaleString","firstName","lastName","handleTabChange","event","newValue","handleChange","e","target","name","value","handleCopyTaskId","workOrderId","navigator","clipboard","writeText","setTimeout","error","children","onClose","fullWidth","maxWidth","fullScreen","title","arrow","disableHoverListener","placement","label","onClick","onMouseEnter","onMouseLeave","onTouchEnd","sx","float","cursor","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","onChange","variant","scrollButtons","container","spacing","item","xs","sm","margin","Object","keys","statusMapping","map","taskTypes","type","disabled","multiline","rows","gutterBottom","handleAddNote","mt","note","index","mb","borderBottom","pb","username","timestamp","whiteSpace","size","handleDeleteNote","fontSize","length","attachment","display","alignItems","handleDownloadAttachment","style","background","border","padding","textDecoration","split","pop","handleDeleteAttachment","multiple","handleFileChange","handleUploadAttachments","handleSubmit","autoHideDuration","handleCloseSnackbar","message","action","handleUndo","_c","$RefreshReg$"],"sources":["C:/Users/steve/OneDrive/Desktop/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Snackbar,\r\n  Tooltip,\r\n  Chip\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport axios from '../api/axiosConfig';\r\n\r\nconst EditWorkOrderModal = ({ open, handleClose, workOrder, fetchWorkOrders }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm')); // Determine if it's mobile or not\r\n\r\n  const [formData, setFormData] = useState({\r\n    status: '',\r\n    taskType: '',\r\n    roomNumber: '',\r\n    description: '',\r\n    notes: '',\r\n    submittedBy: '',\r\n    notesHistory: [],\r\n    newNote: '',\r\n    createdDate: '',\r\n    attachments: [],\r\n  });\r\n\r\n  const [originalFormData, setOriginalFormData] = useState(null);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [tooltipText, setTooltipText] = useState(\"Copy Task ID\");\r\n  const [tooltipOpen, setTooltipOpen] = useState(false); // Control tooltip state\r\n  const [copied, setCopied] = useState(false); // New state to handle copy action\r\n  const [selectedFiles, setSelectedFiles] = useState([]); // State for file selection\r\n\r\n  useEffect(() => {\r\n    if (workOrder) {\r\n      const initialData = {\r\n        _id: workOrder._id || '',\r\n        taskType: workOrder.taskType || '',\r\n        roomNumber: workOrder.roomNumber || '',\r\n        description: workOrder.details || '',\r\n        notesHistory: workOrder.notesHistory || [],\r\n        createdDate: new Date(workOrder.createdDate).toLocaleString(),\r\n        attachments: workOrder.attachments || [],\r\n        submittedBy: workOrder.submittedBy\r\n          ? `${workOrder.submittedBy.firstName} ${workOrder.submittedBy.lastName}`\r\n          : 'N/A',\r\n        newNote: '',\r\n      };\r\n\r\n      setFormData(initialData);\r\n      setOriginalFormData(initialData);\r\n    }\r\n  }, [workOrder]);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setSelectedTab(newValue);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleCopyTaskId = async () => {\r\n    if (workOrder?.workOrderId) {\r\n      try {\r\n        await navigator.clipboard.writeText(workOrder.workOrderId);\r\n        setTooltipText(\"Copied!\");\r\n        setTooltipOpen(true);\r\n        setCopied(true);  // Set copied state to true\r\n        setTimeout(() => {\r\n          setTooltipOpen(false);\r\n          setCopied(false);  // Reset copied state after tooltip disappears\r\n        }, 1500);\r\n      } catch (error) {\r\n        setTooltipText(\"Failed to copy\");\r\n        setTooltipOpen(true);\r\n        setTimeout(() => setTooltipOpen(false), 1500);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"md\" fullScreen={isMobile}>\r\n        <DialogTitle>\r\n          Edit Work Order\r\n          {workOrder?.workOrderId && (\r\n            <Tooltip\r\n              title={tooltipText}\r\n              arrow\r\n              open={tooltipOpen} // Tooltip only shows when clicked or hovered\r\n              onClose={() => setTooltipOpen(false)}\r\n              disableHoverListener={isMobile || copied} // Disable hover when copied is true\r\n              placement=\"top\"\r\n            >\r\n              <Chip\r\n                label={`Task ID: ${workOrder.workOrderId}`}\r\n                onClick={handleCopyTaskId}\r\n                onMouseEnter={() => !isMobile && !copied && setTooltipOpen(true)} // Only show on hover if not copied\r\n                onMouseLeave={() => !isMobile && !copied && setTooltipOpen(false)} // Only close on hover out if not copied\r\n                onTouchEnd={handleCopyTaskId} // For mobile, tap works without hover\r\n                sx={{ float: 'right', cursor: 'pointer', fontWeight: 'bold', color: 'primary.main' }}\r\n              />\r\n            </Tooltip>\r\n          )}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Update the work order details below:</DialogContentText>\r\n\r\n          <Tabs\r\n            value={selectedTab}\r\n            onChange={handleTabChange}\r\n            variant=\"scrollable\"\r\n            scrollButtons={false}\r\n          >\r\n            <Tab label=\"Work Order Details\" />\r\n            <Tab label=\"Notes and Updates\" />\r\n            <Tab label=\"Attachments\" />\r\n          </Tabs>\r\n\r\n          {selectedTab === 0 && (\r\n            <Box>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\r\n                    <InputLabel>Status</InputLabel>\r\n                    <Select\r\n                      name=\"status\"\r\n                      value={formData.status}\r\n                      onChange={handleChange}\r\n                      label=\"Status\"\r\n                    >\r\n                      {Object.keys(statusMapping).map((status) => (\r\n                        <MenuItem key={status} value={status}>\r\n                          {statusMapping[status]}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\r\n                    <InputLabel>Task Type</InputLabel>\r\n                    <Select\r\n                      name=\"taskType\"\r\n                      value={formData.taskType}\r\n                      onChange={handleChange}\r\n                      label=\"Task Type\"\r\n                    >\r\n                      {taskTypes.map((type) => (\r\n                        <MenuItem key={type} value={type}>\r\n                          {type}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <TextField\r\n                    label=\"Room Number\"\r\n                    name=\"roomNumber\"\r\n                    value={formData.roomNumber}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                  />\r\n\r\n                  <TextField\r\n                    label=\"Submitted By\"\r\n                    name=\"submittedBy\"\r\n                    value={formData.submittedBy || 'N/A'}\r\n                    disabled\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                  />\r\n\r\n                  <TextField\r\n                    label=\"Date Created\"\r\n                    name=\"createdDate\"\r\n                    value={formData.createdDate}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"Original Description\"\r\n                    name=\"description\"\r\n                    value={formData.description}\r\n                    fullWidth\r\n                    multiline\r\n                    rows={isMobile ? 3 : 6}\r\n                    margin=\"normal\"\r\n                    disabled\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n\r\n          {selectedTab === 1 && (\r\n            <Box>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Add new note\r\n              </Typography>\r\n              <TextField\r\n                label=\"Add new note\"\r\n                name=\"newNote\"\r\n                value={formData.newNote}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                multiline\r\n                rows={isMobile ? 3 : 5}\r\n                margin=\"normal\"\r\n              />\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleAddNote}>\r\n                Add Note\r\n              </Button>\r\n\r\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Notes History\r\n              </Typography>\r\n              <Box sx={{ mt: 2 }}>\r\n                {formData.notesHistory.map((note, index) => (\r\n                  <Box key={index} sx={{ mb: 2, borderBottom: '1px solid #ccc', pb: 1 }}>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>{note.username}</strong> at{' '}\r\n                      {new Date(note.timestamp).toLocaleString()}:\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {note.note}\r\n                    </Typography>\r\n                    <IconButton size=\"small\" onClick={() => handleDeleteNote(index)}>\r\n                      <DeleteIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n          )}\r\n\r\n          {selectedTab === 2 && (\r\n            <Box>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Existing Attachments\r\n              </Typography>\r\n              {formData.attachments.length > 0 ? (\r\n                <Box>\r\n                  {formData.attachments.map((attachment, index) => (\r\n                    <Box key={index} sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                      <Typography>\r\n                        <button\r\n                          onClick={() => handleDownloadAttachment(attachment)}\r\n                          style={{ background: 'none', border: 'none', padding: 0, color: 'blue', textDecoration: 'underline', cursor: 'pointer' }}\r\n                        >\r\n                          {attachment.split('/').pop()}\r\n                        </button>\r\n                      </Typography>\r\n                      <IconButton onClick={() => handleDeleteAttachment(attachment.split('/').pop())}>\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography>No attachments available.</Typography>\r\n              )}\r\n\r\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Upload New Attachments\r\n              </Typography>\r\n              <input type=\"file\" multiple onChange={handleFileChange} />\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleUploadAttachments}>\r\n                Upload Attachments\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={7500}\r\n        onClose={handleCloseSnackbar}\r\n        message=\"Work order updated\"\r\n        action={\r\n          <>\r\n            <Button color=\"inherit\" size=\"small\" onClick={handleUndo}>\r\n              Undo\r\n            </Button>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseSnackbar}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditWorkOrderModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}