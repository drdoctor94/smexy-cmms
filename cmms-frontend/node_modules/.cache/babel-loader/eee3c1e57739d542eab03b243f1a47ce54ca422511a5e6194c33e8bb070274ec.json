{"ast":null,"code":"var _jsxFileName = \"/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, MenuItem, Select, InputLabel, FormControl, Grid, Tabs, Tab, Box, Typography, IconButton, Snackbar, Tooltip, Chip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport axios from '../api/axiosConfig';\n\n// Define status mapping and task types that were missing\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst statusMapping = {\n  new: 'New',\n  pending: 'Pending',\n  delayed: 'Delayed',\n  closed: 'Closed',\n  excluded: 'Excluded',\n  're-opened': 'Re-Opened'\n};\nconst taskTypes = ['Clean Up / Spill', 'Cooling Issue', 'Electrical Issue', 'Equipment Repairs', 'Fire Safety', 'General Maintenance Request', 'Health and Safety', 'Heating Issues', 'Lighting Issues', 'Mechanical Issues', 'Painting / Touch Ups', 'Pest Control', 'Plumbing Issues', 'Waste Issues'];\nconst EditWorkOrderModal = ({\n  open,\n  handleClose,\n  workOrder,\n  fetchWorkOrders\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [],\n    newNote: '',\n    createdDate: '',\n    attachments: []\n  });\n  const [selectedTab, setSelectedTab] = useState(0); // Define selectedTab state\n  const [tooltipText, setTooltipText] = useState(\"Copy Task ID\");\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // Define snackbar state\n\n  useEffect(() => {\n    if (workOrder) {\n      const initialData = {\n        _id: workOrder._id || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notesHistory: workOrder.notesHistory || [],\n        createdDate: new Date(workOrder.createdDate).toLocaleString(),\n        attachments: workOrder.attachments || [],\n        submittedBy: workOrder.submittedBy ? `${workOrder.submittedBy.firstName} ${workOrder.submittedBy.lastName}` : 'N/A',\n        newNote: ''\n      };\n      setFormData(initialData);\n    }\n  }, [workOrder]);\n\n  // Define the missing event handlers\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFileChange = e => {\n    // Handle file uploads\n  };\n  const handleAddNote = () => {\n    // Handle adding new note\n  };\n  const handleDeleteNote = index => {\n    // Handle deleting note\n  };\n  const handleDownloadAttachment = attachment => {\n    // Handle attachment download\n  };\n  const handleDeleteAttachment = filename => {\n    // Handle deleting attachment\n  };\n  const handleUploadAttachments = () => {\n    // Handle uploading attachments\n  };\n  const handleSubmit = () => {\n    // Handle form submission\n  };\n  const handleUndo = () => {\n    // Handle undo action\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n\n  // Function to copy Task ID to clipboard and show tooltip\n  const handleCopyTaskId = async () => {\n    if (workOrder !== null && workOrder !== void 0 && workOrder.workOrderId) {\n      try {\n        await navigator.clipboard.writeText(workOrder.workOrderId);\n        setTooltipText(\"Copied!\"); // Set tooltip to \"Copied!\"\n        setTimeout(() => {\n          setTooltipText(\"Copy Task ID\"); // Revert tooltip after a delay\n        }, 1500); // Tooltip will reset after 1.5 seconds\n      } catch (error) {\n        setTooltipText(\"Failed to copy\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Edit Work Order\", (workOrder === null || workOrder === void 0 ? void 0 : workOrder.workOrderId) && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: tooltipText,\n          arrow: true,\n          open: isMobile ? undefined : false // Disable default tooltip behavior on mobile\n          ,\n          disableHoverListener: isMobile // Disable hover on mobile\n          ,\n          disableTouchListener: !isMobile // Disable touch on non-mobile\n          ,\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Task ID: ${workOrder.workOrderId}`,\n            onClick: handleCopyTaskId,\n            sx: {\n              float: 'right',\n              cursor: 'pointer',\n              fontWeight: 'bold',\n              color: 'primary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Update the work order details below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: selectedTab,\n          onChange: handleTabChange,\n          variant: \"scrollable\",\n          scrollButtons: false,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Work Order Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Notes and Updates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), selectedTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleChange,\n                  label: \"Status\",\n                  children: Object.keys(statusMapping).map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: status,\n                    children: statusMapping[status]\n                  }, status, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Task Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"taskType\",\n                  value: formData.taskType,\n                  onChange: handleChange,\n                  label: \"Task Type\",\n                  children: taskTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type,\n                    children: type\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Room Number\",\n                name: \"roomNumber\",\n                value: formData.roomNumber,\n                onChange: handleChange,\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Submitted By\",\n                name: \"submittedBy\",\n                value: formData.submittedBy || 'N/A',\n                disabled: true,\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Date Created\",\n                name: \"createdDate\",\n                value: formData.createdDate,\n                fullWidth: true,\n                margin: \"normal\",\n                disabled: true,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Original Description\",\n                name: \"description\",\n                value: formData.description,\n                fullWidth: true,\n                multiline: true,\n                rows: isMobile ? 3 : 6 // Responsive rows for mobile\n                ,\n                margin: \"normal\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), selectedTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Add new note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Add new note\",\n            name: \"newNote\",\n            value: formData.newNote,\n            onChange: handleChange,\n            fullWidth: true,\n            multiline: true,\n            rows: isMobile ? 3 : 5 // Responsive text field rows\n            ,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              mt: 4\n            },\n            children: \"Notes History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: formData.notesHistory.map((note, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                borderBottom: '1px solid #ccc',\n                pb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: note.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), \" at\", ' ', new Date(note.timestamp).toLocaleString(), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: note.note\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleDeleteNote(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), selectedTab === 2 && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Existing Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), formData.attachments.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            children: formData.attachments.map((attachment, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDownloadAttachment(attachment),\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    padding: 0,\n                    color: 'blue',\n                    textDecoration: 'underline',\n                    cursor: 'pointer'\n                  },\n                  children: attachment.split('/').pop()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleDeleteAttachment(attachment.split('/').pop()),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No attachments available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              mt: 4\n            },\n            children: \"Upload New Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleUploadAttachments,\n            children: \"Upload Attachments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 7500,\n      onClose: handleCloseSnackbar,\n      message: \"Work order updated\",\n      action: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleUndo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleCloseSnackbar,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EditWorkOrderModal, \"wVMiXjrSJpyNWLWhboxqO8rTbaM=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = EditWorkOrderModal;\nexport default EditWorkOrderModal;\nvar _c;\n$RefreshReg$(_c, \"EditWorkOrderModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","Select","InputLabel","FormControl","Grid","Tabs","Tab","Box","Typography","IconButton","Snackbar","Tooltip","Chip","DeleteIcon","CloseIcon","useMediaQuery","useTheme","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","statusMapping","new","pending","delayed","closed","excluded","taskTypes","EditWorkOrderModal","open","handleClose","workOrder","fetchWorkOrders","_s","theme","isMobile","breakpoints","down","formData","setFormData","status","taskType","roomNumber","description","notes","submittedBy","notesHistory","newNote","createdDate","attachments","selectedTab","setSelectedTab","tooltipText","setTooltipText","snackbarOpen","setSnackbarOpen","initialData","_id","details","Date","toLocaleString","firstName","lastName","handleTabChange","event","newValue","handleChange","e","target","name","value","handleFileChange","handleAddNote","handleDeleteNote","index","handleDownloadAttachment","attachment","handleDeleteAttachment","filename","handleUploadAttachments","handleSubmit","handleUndo","handleCloseSnackbar","handleCopyTaskId","workOrderId","navigator","clipboard","writeText","setTimeout","error","children","onClose","fullWidth","maxWidth","title","arrow","undefined","disableHoverListener","disableTouchListener","label","onClick","sx","float","cursor","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","onChange","variant","scrollButtons","container","spacing","item","xs","sm","margin","Object","keys","map","type","disabled","multiline","rows","gutterBottom","mt","note","mb","borderBottom","pb","username","timestamp","whiteSpace","size","fontSize","length","display","alignItems","style","background","border","padding","textDecoration","split","pop","multiple","autoHideDuration","message","action","_c","$RefreshReg$"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/pages/EditWorkOrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  Grid,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  IconButton,\n  Snackbar,\n  Tooltip,\n  Chip\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport axios from '../api/axiosConfig';\n\n// Define status mapping and task types that were missing\nconst statusMapping = {\n  new: 'New',\n  pending: 'Pending',\n  delayed: 'Delayed',\n  closed: 'Closed',\n  excluded: 'Excluded',\n  're-opened': 'Re-Opened',\n};\n\nconst taskTypes = [\n  'Clean Up / Spill',\n  'Cooling Issue',\n  'Electrical Issue',\n  'Equipment Repairs',\n  'Fire Safety',\n  'General Maintenance Request',\n  'Health and Safety',\n  'Heating Issues',\n  'Lighting Issues',\n  'Mechanical Issues',\n  'Painting / Touch Ups',\n  'Pest Control',\n  'Plumbing Issues',\n  'Waste Issues',\n];\n\nconst EditWorkOrderModal = ({ open, handleClose, workOrder, fetchWorkOrders }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [formData, setFormData] = useState({\n    status: '',\n    taskType: '',\n    roomNumber: '',\n    description: '',\n    notes: '',\n    submittedBy: '',\n    notesHistory: [],\n    newNote: '',\n    createdDate: '',\n    attachments: [],\n  });\n\n  const [selectedTab, setSelectedTab] = useState(0); // Define selectedTab state\n  const [tooltipText, setTooltipText] = useState(\"Copy Task ID\");\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // Define snackbar state\n\n  useEffect(() => {\n    if (workOrder) {\n      const initialData = {\n        _id: workOrder._id || '',\n        taskType: workOrder.taskType || '',\n        roomNumber: workOrder.roomNumber || '',\n        description: workOrder.details || '',\n        notesHistory: workOrder.notesHistory || [],\n        createdDate: new Date(workOrder.createdDate).toLocaleString(),\n        attachments: workOrder.attachments || [],\n        submittedBy: workOrder.submittedBy\n          ? `${workOrder.submittedBy.firstName} ${workOrder.submittedBy.lastName}`\n          : 'N/A',\n        newNote: '',\n      };\n\n      setFormData(initialData);\n    }\n  }, [workOrder]);\n\n  // Define the missing event handlers\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleFileChange = (e) => {\n    // Handle file uploads\n  };\n\n  const handleAddNote = () => {\n    // Handle adding new note\n  };\n\n  const handleDeleteNote = (index) => {\n    // Handle deleting note\n  };\n\n  const handleDownloadAttachment = (attachment) => {\n    // Handle attachment download\n  };\n\n  const handleDeleteAttachment = (filename) => {\n    // Handle deleting attachment\n  };\n\n  const handleUploadAttachments = () => {\n    // Handle uploading attachments\n  };\n\n  const handleSubmit = () => {\n    // Handle form submission\n  };\n\n  const handleUndo = () => {\n    // Handle undo action\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n\n  // Function to copy Task ID to clipboard and show tooltip\n  const handleCopyTaskId = async () => {\n    if (workOrder?.workOrderId) {\n      try {\n        await navigator.clipboard.writeText(workOrder.workOrderId);\n        setTooltipText(\"Copied!\"); // Set tooltip to \"Copied!\"\n        setTimeout(() => {\n          setTooltipText(\"Copy Task ID\"); // Revert tooltip after a delay\n        }, 1500); // Tooltip will reset after 1.5 seconds\n      } catch (error) {\n        setTooltipText(\"Failed to copy\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"md\">\n        <DialogTitle>\n          Edit Work Order\n          {workOrder?.workOrderId && (\n            <Tooltip \n              title={tooltipText} \n              arrow \n              open={isMobile ? undefined : false} // Disable default tooltip behavior on mobile\n              disableHoverListener={isMobile} // Disable hover on mobile\n              disableTouchListener={!isMobile} // Disable touch on non-mobile\n            >\n              <Chip\n                label={`Task ID: ${workOrder.workOrderId}`}\n                onClick={handleCopyTaskId}\n                sx={{ float: 'right', cursor: 'pointer', fontWeight: 'bold', color: 'primary.main' }}\n              />\n            </Tooltip>\n          )}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>Update the work order details below:</DialogContentText>\n\n          <Tabs \n            value={selectedTab} \n            onChange={handleTabChange}\n            variant=\"scrollable\" \n            scrollButtons={false} \n          >\n            <Tab label=\"Work Order Details\" />\n            <Tab label=\"Notes and Updates\" />\n            <Tab label=\"Attachments\" />\n          </Tabs>\n\n          {selectedTab === 0 && (\n            <Box>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                    <InputLabel>Status</InputLabel>\n                    <Select\n                      name=\"status\"\n                      value={formData.status}\n                      onChange={handleChange}\n                      label=\"Status\"\n                    >\n                      {Object.keys(statusMapping).map((status) => (\n                        <MenuItem key={status} value={status}>\n                          {statusMapping[status]}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\n                    <InputLabel>Task Type</InputLabel>\n                    <Select\n                      name=\"taskType\"\n                      value={formData.taskType}\n                      onChange={handleChange}\n                      label=\"Task Type\"\n                    >\n                      {taskTypes.map((type) => (\n                        <MenuItem key={type} value={type}>\n                          {type}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <TextField\n                    label=\"Room Number\"\n                    name=\"roomNumber\"\n                    value={formData.roomNumber}\n                    onChange={handleChange}\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n\n                  <TextField\n                    label=\"Submitted By\"\n                    name=\"submittedBy\"\n                    value={formData.submittedBy || 'N/A'}\n                    disabled\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n\n                  <TextField\n                    label=\"Date Created\"\n                    name=\"createdDate\"\n                    value={formData.createdDate}\n                    fullWidth\n                    margin=\"normal\"\n                    disabled\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label=\"Original Description\"\n                    name=\"description\"\n                    value={formData.description}\n                    fullWidth\n                    multiline\n                    rows={isMobile ? 3 : 6} // Responsive rows for mobile\n                    margin=\"normal\"\n                    disabled\n                  />\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n\n          {selectedTab === 1 && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Add new note\n              </Typography>\n              <TextField\n                label=\"Add new note\"\n                name=\"newNote\"\n                value={formData.newNote}\n                onChange={handleChange}\n                fullWidth\n                multiline\n                rows={isMobile ? 3 : 5} // Responsive text field rows\n                margin=\"normal\"\n              />\n              <Button variant=\"contained\" color=\"primary\" onClick={handleAddNote}>\n                Add Note\n              </Button>\n\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n                Notes History\n              </Typography>\n              <Box sx={{ mt: 2 }}>\n                {formData.notesHistory.map((note, index) => (\n                  <Box key={index} sx={{ mb: 2, borderBottom: '1px solid #ccc', pb: 1 }}>\n                    <Typography variant=\"body2\">\n                      <strong>{note.username}</strong> at{' '}\n                      {new Date(note.timestamp).toLocaleString()}:\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\n                      {note.note}\n                    </Typography>\n                    <IconButton size=\"small\" onClick={() => handleDeleteNote(index)}>\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          )}\n\n          {selectedTab === 2 && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Existing Attachments\n              </Typography>\n              {formData.attachments.length > 0 ? (\n                <Box>\n                  {formData.attachments.map((attachment, index) => (\n                    <Box key={index} sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                      <Typography>\n                        <button\n                          onClick={() => handleDownloadAttachment(attachment)}\n                          style={{ background: 'none', border: 'none', padding: 0, color: 'blue', textDecoration: 'underline', cursor: 'pointer' }}\n                        >\n                          {attachment.split('/').pop()}\n                        </button>\n                      </Typography>\n                      <IconButton onClick={() => handleDeleteAttachment(attachment.split('/').pop())}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </Box>\n                  ))}\n                </Box>\n              ) : (\n                <Typography>No attachments available.</Typography>\n              )}\n\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n                Upload New Attachments\n              </Typography>\n              <input type=\"file\" multiple onChange={handleFileChange} />\n              <Button variant=\"contained\" color=\"primary\" onClick={handleUploadAttachments}>\n                Upload Attachments\n              </Button>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={7500}\n        onClose={handleCloseSnackbar}\n        message=\"Work order updated\"\n        action={\n          <>\n            <Button color=\"inherit\" size=\"small\" onClick={handleUndo}>\n              Undo\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleCloseSnackbar}\n            >\n              <CloseIcon />\n            </IconButton>\n          </>\n        }\n      />\n    </>\n  );\n};\n\nexport default EditWorkOrderModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}