{"ast":null,"code":"// src/api/axiosConfig.js\n\nimport axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:5151' // Update if your backend is on a different port\n});\n\n// Request interceptor to attach the token\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) config.headers['Authorization'] = `Bearer ${token}`;\n  return config;\n}, error => Promise.reject(error));\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/api/axiosConfig.js"],"sourcesContent":["// src/api/axiosConfig.js\n\nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:5151', // Update if your backend is on a different port\n});\n\n// Request interceptor to attach the token\ninstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) config.headers['Authorization'] = `Bearer ${token}`;\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default instance;\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EAC9D,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}