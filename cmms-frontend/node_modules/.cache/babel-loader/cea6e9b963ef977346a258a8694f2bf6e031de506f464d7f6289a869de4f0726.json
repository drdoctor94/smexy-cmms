{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\OneDrive\\\\Desktop\\\\smexy-cmms\\\\cmms-frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport axios from '../api/axiosConfig';\nimport { CircularProgress, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    login\n  } = useContext(AuthContext); // Fetch user and login method from context\n  const [loading, setLoading] = useState(true); // Loading state to handle async auth check\n\n  useEffect(() => {\n    const verifyUser = async () => {\n      try {\n        const response = await axios.get('/api/auth/verify', {\n          withCredentials: true\n        });\n        if (response.data.user) {\n          login(response.data.user); // Login and set the user in context if token is valid\n        }\n      } catch (error) {\n        console.error('User verification failed:', error); // Handle errors if the user is not authenticated\n      } finally {\n        setLoading(false); // Stop loading after verification is complete\n      }\n    };\n    if (!user) {\n      verifyUser(); // If the user is not in context, verify the user via the backend\n    } else {\n      setLoading(false); // If user is already in context, stop loading\n    }\n  }, [user, login]);\n\n  // Show a loading state with Material-UI's CircularProgress while the user is being verified\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to login if user is not authenticated\n  return user ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 28\n  }, this);\n};\n_s(ProtectedRoute, \"yfZvZjTBNEHB6Ro/8bOEBeAPee0=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Navigate","AuthContext","axios","CircularProgress","Box","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","login","loading","setLoading","verifyUser","response","get","withCredentials","data","error","console","sx","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/steve/OneDrive/Desktop/smexy-cmms/cmms-frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport axios from '../api/axiosConfig';\r\nimport { CircularProgress, Box } from '@mui/material';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, login } = useContext(AuthContext);  // Fetch user and login method from context\r\n  const [loading, setLoading] = useState(true);  // Loading state to handle async auth check\r\n\r\n  useEffect(() => {\r\n    const verifyUser = async () => {\r\n      try {\r\n        const response = await axios.get('/api/auth/verify', { withCredentials: true });\r\n        if (response.data.user) {\r\n          login(response.data.user);  // Login and set the user in context if token is valid\r\n        }\r\n      } catch (error) {\r\n        console.error('User verification failed:', error);  // Handle errors if the user is not authenticated\r\n      } finally {\r\n        setLoading(false);  // Stop loading after verification is complete\r\n      }\r\n    };\r\n\r\n    if (!user) {\r\n      verifyUser();  // If the user is not in context, verify the user via the backend\r\n    } else {\r\n      setLoading(false);  // If user is already in context, stop loading\r\n    }\r\n  }, [user, login]);\r\n\r\n  // Show a loading state with Material-UI's CircularProgress while the user is being verified\r\n  if (loading) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Redirect to login if user is not authenticated\r\n  return user ? children : <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,gBAAgB,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGd,UAAU,CAACI,WAAW,CAAC,CAAC,CAAE;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,kBAAkB,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAC/E,IAAIF,QAAQ,CAACG,IAAI,CAACR,IAAI,EAAE;UACtBC,KAAK,CAACI,QAAQ,CAACG,IAAI,CAACR,IAAI,CAAC,CAAC,CAAE;QAC9B;MACF,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC,CAAE;MACtD,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACtB;IACF,CAAC;IAED,IAAI,CAACH,IAAI,EAAE;MACTI,UAAU,CAAC,CAAC,CAAC,CAAE;IACjB,CAAC,MAAM;MACLD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB;EACF,CAAC,EAAE,CAACH,IAAI,EAAEC,KAAK,CAAC,CAAC;;EAEjB;EACA,IAAIC,OAAO,EAAE;IACX,oBACEN,OAAA,CAACF,GAAG;MACFiB,EAAE,EAAE;QACFC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACV,CAAE;MAAAjB,QAAA,eAEFF,OAAA,CAACH,gBAAgB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;;EAEA;EACA,OAAOnB,IAAI,GAAGF,QAAQ,gBAAGF,OAAA,CAACN,QAAQ;IAAC8B,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D,CAAC;AAACpB,EAAA,CA3CIF,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}