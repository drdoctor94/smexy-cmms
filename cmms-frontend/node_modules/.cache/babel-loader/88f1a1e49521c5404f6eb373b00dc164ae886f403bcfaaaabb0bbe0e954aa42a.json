{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{Navigate}from'react-router-dom';import{AuthContext}from'../context/AuthContext';import axios from'../api/axiosConfig';import{CircularProgress,Box}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{user,login}=useContext(AuthContext);// Fetch user and login method from context\nconst[loading,setLoading]=useState(true);// Loading state to handle async auth check\nuseEffect(()=>{const verifyUser=async()=>{try{const response=await axios.get('/api/auth/verify',{withCredentials:true});if(response.data.user){login(response.data.user);// Login and set the user in context if token is valid\n}}catch(error){console.error('User verification failed:',error);// Handle errors if the user is not authenticated\n}finally{setLoading(false);// Stop loading after verification is complete\n}};if(!user){verifyUser();// If the user is not in context, verify the user via the backend\n}else{setLoading(false);// If user is already in context, stop loading\n}},[user,login]);// Show a loading state with Material-UI's CircularProgress while the user is being verified\nif(loading){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'},children:/*#__PURE__*/_jsx(CircularProgress,{})});}// Redirect to login if user is not authenticated\nreturn user?children:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};export default ProtectedRoute;","map":{"version":3,"names":["React","useContext","useEffect","useState","Navigate","AuthContext","axios","CircularProgress","Box","jsx","_jsx","ProtectedRoute","_ref","children","user","login","loading","setLoading","verifyUser","response","get","withCredentials","data","error","console","sx","display","justifyContent","alignItems","height","to","replace"],"sources":["/Users/haxordee/smexy-cmms/cmms-frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport axios from '../api/axiosConfig';\nimport { CircularProgress, Box } from '@mui/material';\n\nconst ProtectedRoute = ({ children }) => {\n  const { user, login } = useContext(AuthContext);  // Fetch user and login method from context\n  const [loading, setLoading] = useState(true);  // Loading state to handle async auth check\n\n  useEffect(() => {\n    const verifyUser = async () => {\n      try {\n        const response = await axios.get('/api/auth/verify', { withCredentials: true });\n        if (response.data.user) {\n          login(response.data.user);  // Login and set the user in context if token is valid\n        }\n      } catch (error) {\n        console.error('User verification failed:', error);  // Handle errors if the user is not authenticated\n      } finally {\n        setLoading(false);  // Stop loading after verification is complete\n      }\n    };\n\n    if (!user) {\n      verifyUser();  // If the user is not in context, verify the user via the backend\n    } else {\n      setLoading(false);  // If user is already in context, stop loading\n    }\n  }, [user, login]);\n\n  // Show a loading state with Material-UI's CircularProgress while the user is being verified\n  if (loading) {\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh',\n        }}\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Redirect to login if user is not authenticated\n  return user ? children : <Navigate to=\"/login\" replace />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC9D,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,wBAAwB,CACpD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OAASC,gBAAgB,CAAEC,GAAG,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,IAAI,CAAEC,KAAM,CAAC,CAAGd,UAAU,CAACI,WAAW,CAAC,CAAG;AAClD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAAG;AAE/CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,KAAK,CAACc,GAAG,CAAC,kBAAkB,CAAE,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,CAC/E,GAAIF,QAAQ,CAACG,IAAI,CAACR,IAAI,CAAE,CACtBC,KAAK,CAACI,QAAQ,CAACG,IAAI,CAACR,IAAI,CAAC,CAAG;AAC9B,CACF,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CAAG;AACtD,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CAAG;AACtB,CACF,CAAC,CAED,GAAI,CAACH,IAAI,CAAE,CACTI,UAAU,CAAC,CAAC,CAAG;AACjB,CAAC,IAAM,CACLD,UAAU,CAAC,KAAK,CAAC,CAAG;AACtB,CACF,CAAC,CAAE,CAACH,IAAI,CAAEC,KAAK,CAAC,CAAC,CAEjB;AACA,GAAIC,OAAO,CAAE,CACX,mBACEN,IAAA,CAACF,GAAG,EACFiB,EAAE,CAAE,CACFC,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,MAAM,CAAE,OACV,CAAE,CAAAhB,QAAA,cAEFH,IAAA,CAACH,gBAAgB,GAAE,CAAC,CACjB,CAAC,CAEV,CAEA;AACA,MAAO,CAAAO,IAAI,CAAGD,QAAQ,cAAGH,IAAA,CAACN,QAAQ,EAAC0B,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAC3D,CAAC,CAED,cAAe,CAAApB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}